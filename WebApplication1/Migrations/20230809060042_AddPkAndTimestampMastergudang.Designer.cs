// <auto-generated />
using System;
using DoranOfficeBackend;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DoranOfficeBackend.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20230809060042_AddPkAndTimestampMastergudang")]
    partial class AddPkAndTimestampMastergudang
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DoranOfficeBackend.Models.Absenspg", b =>
                {
                    b.Property<int>("Absen")
                        .HasColumnType("int(11)")
                        .HasColumnName("absen");

                    b.Property<int>("Bulan")
                        .HasColumnType("int(11)")
                        .HasColumnName("bulan");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<DateTime?>("DeletedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<int>("Id")
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<int>("Jumtelat")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumtelat");

                    b.Property<int>("KodePegawai")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodePegawai");

                    b.Property<int>("Tahun")
                        .HasColumnType("int(11)")
                        .HasColumnName("tahun");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.ToTable("absenspg", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Adaaktifita", b =>
                {
                    b.Property<string>("Ada")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("char(1)")
                        .HasColumnName("ada")
                        .HasDefaultValueSql("'''0'''")
                        .IsFixedLength();

                    b.Property<bool>("Adaorderan")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("adaorderan");

                    b.ToTable("adaaktifitas", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Alamattambahanpelanggan", b =>
                {
                    b.Property<string>("Alamat")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("alamat")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("Kirimmelalui")
                        .HasColumnType("int(11)")
                        .HasColumnName("kirimmelalui");

                    b.Property<int>("Kode")
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<int>("Kodepelanggan")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodepelanggan");

                    b.Property<int>("Lokasi")
                        .HasColumnType("int(11)")
                        .HasColumnName("lokasi");

                    b.Property<int>("Tokoexp")
                        .HasColumnType("int(11)")
                        .HasColumnName("tokoexp");

                    b.ToTable("alamattambahanpelanggan", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Barangmasuk", b =>
                {
                    b.Property<int>("Harga")
                        .HasColumnType("int(11)")
                        .HasColumnName("harga");

                    b.Property<string>("HistoryNya")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("historyNya")
                        .HasDefaultValueSql("'''4'''");

                    b.Property<bool>("InsertName")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("insertName");

                    b.Property<DateTime>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insertTime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<int>("JumSn")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumSN");

                    b.Property<int>("Jumlah")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("keterangan")
                        .HasDefaultValueSql("''''''''''''''");

                    b.Property<int>("Kode")
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<int>("KodeBarang")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeBarang");

                    b.Property<short>("KodeSupplier")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("kodeSupplier");

                    b.Property<int>("Kodegudang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kodegudang")
                        .HasDefaultValueSql("'1'");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<DateTime>("TglMasuk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tglMasuk")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<bool>("UpdateName")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("updateName");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updateTime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.ToTable("barangmasuk", (string)null);

                    b.HasComment("Buat Detail Barang Masuk");
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Barangsn", b =>
                {
                    b.Property<int>("Insertnamebeli")
                        .HasColumnType("int(11)")
                        .HasColumnName("insertnamebeli");

                    b.Property<int>("Insertnamejual")
                        .HasColumnType("int(11)")
                        .HasColumnName("insertnamejual");

                    b.Property<int>("Insertnametransit")
                        .HasColumnType("int(11)")
                        .HasColumnName("insertnametransit");

                    b.Property<DateTime>("Inserttimebeli")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("inserttimebeli")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<DateTime>("Inserttimejual")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("inserttimejual")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<DateTime>("Inserttimetransit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("inserttimetransit")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<int>("Kodebarang")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodebarang");

                    b.Property<int>("Kodedbeli")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodedbeli");

                    b.Property<int>("Kodedjual")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodedjual");

                    b.Property<int>("Kodegudang")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodegudang");

                    b.Property<int>("Kodehbeli")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodehbeli");

                    b.Property<int>("Kodehjual")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodehjual");

                    b.Property<string>("NmrSn")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("nmrSN")
                        .HasDefaultValueSql("''''''");

                    b.Property<sbyte>("Status")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("status")
                        .HasComment("0=stok,1=terjual");

                    b.ToTable("barangsn", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Barangstokterkait", b =>
                {
                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<DateTime?>("DeletedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("deleted_at")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<int>("Id")
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<int>("Kode")
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<int>("Kodebarang1")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodebarang1");

                    b.Property<int>("Kodebarang2")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodebarang2");

                    b.Property<int>("Stok1")
                        .HasColumnType("int(11)")
                        .HasColumnName("stok1");

                    b.Property<int>("Stok2")
                        .HasColumnType("int(11)")
                        .HasColumnName("stok2");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.ToTable("barangstokterkait", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Bathippo", b =>
                {
                    b.Property<int>("BonusTerendah")
                        .HasColumnType("int(11)")
                        .HasColumnName("bonusTerendah");

                    b.Property<int>("BonusTertinggi")
                        .HasColumnType("int(11)")
                        .HasColumnName("bonusTertinggi");

                    b.Property<short>("BrgKode")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("brgKode");

                    b.Property<int>("HargaTerendah")
                        .HasColumnType("int(11)")
                        .HasColumnName("hargaTerendah");

                    b.Property<int>("HargaTertinggi")
                        .HasColumnType("int(11)")
                        .HasColumnName("hargaTertinggi");

                    b.Property<short>("Kode")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("kode");

                    b.ToTable("bathippo", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Cekpotonganonline", b =>
                {
                    b.Property<int>("Bulan")
                        .HasColumnType("int(11)")
                        .HasColumnName("bulan");

                    b.Property<int>("Kode")
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<int>("Kodepelanggan")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodepelanggan");

                    b.Property<int>("Periksa")
                        .HasColumnType("int(11)")
                        .HasColumnName("periksa")
                        .HasComment("0=belum 1=sudah");

                    b.Property<int>("Tahun")
                        .HasColumnType("int(11)")
                        .HasColumnName("tahun");

                    b.ToTable("cekpotonganonline", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Cekstok", b =>
                {
                    b.Property<short>("Nama")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("nama");

                    b.Property<short>("Urutan")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("urutan");

                    b.ToTable("cekstok", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Cekstok2", b =>
                {
                    b.Property<short>("Nama")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("nama");

                    b.Property<short>("Urutan")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("urutan");

                    b.ToTable("cekstok2", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Coa1", b =>
                {
                    b.Property<int>("Kode")
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nama")
                        .HasDefaultValueSql("''''''");

                    b.Property<sbyte>("Nr")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("nr");

                    b.Property<sbyte>("Tipe")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("tipe");

                    b.ToTable("coa1", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Coa2", b =>
                {
                    b.Property<int>("Kode")
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<int>("Kodecoa1")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodecoa1");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nama")
                        .HasDefaultValueSql("''''''''''''''");

                    b.Property<sbyte>("Nr")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("nr");

                    b.Property<sbyte>("Tipe")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("tipe");

                    b.ToTable("coa2", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Coa3", b =>
                {
                    b.Property<int>("Kode")
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<int>("Kodecoa1")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodecoa1");

                    b.Property<int>("Kodecoa2")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodecoa2");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nama")
                        .HasDefaultValueSql("''''''''''''''");

                    b.Property<sbyte>("Nr")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("nr");

                    b.Property<sbyte?>("Tipe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("tipe")
                        .HasDefaultValueSql("'0'");

                    b.ToTable("coa3", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Coa4", b =>
                {
                    b.Property<sbyte>("Golongan")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("golongan")
                        .HasComment("0=Belum, 1=Kas");

                    b.Property<int>("Kode")
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<int>("Kodecoa1")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodecoa1");

                    b.Property<int>("Kodecoa2")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodecoa2");

                    b.Property<int>("Kodecoa3")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodecoa3");

                    b.Property<int>("KodehTrans")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodehTrans");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nama")
                        .HasDefaultValueSql("''''''");

                    b.Property<sbyte>("Nr")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("nr")
                        .HasComment("0=Neraca,1=RL");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("prefix")
                        .HasDefaultValueSql("''''''");

                    b.Property<sbyte>("Tipe")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("tipe")
                        .HasComment("1=Debit,2=Kredit");

                    b.ToTable("coa4", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Daftarbaranghabi", b =>
                {
                    b.Property<sbyte>("Favorit")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("favorit");

                    b.Property<int>("Kode")
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<int>("Kodebarang")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodebarang");

                    b.Property<sbyte>("Kodegrupbaranghabis")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kodegrupbaranghabis");

                    b.Property<int>("Kodegudang")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodegudang");

                    b.Property<int>("Maxstok")
                        .HasColumnType("int(11)")
                        .HasColumnName("maxstok");

                    b.Property<int>("Minstok")
                        .HasColumnType("int(11)")
                        .HasColumnName("minstok");

                    b.ToTable("daftarbaranghabis", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Daftarbc", b =>
                {
                    b.Property<string>("Isi")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("isi")
                        .HasDefaultValueSql("''''''''''''''");

                    b.Property<string>("Judul")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("judul")
                        .HasDefaultValueSql("''''''''''''''");

                    b.Property<sbyte>("Kode")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kode");

                    b.ToTable("daftarbc", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Daftarkomplain", b =>
                {
                    b.Property<string>("Daridivisi")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("daridivisi")
                        .HasDefaultValueSql("''''''''''''''");

                    b.Property<string>("Jawaban")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)")
                        .HasColumnName("jawaban")
                        .HasDefaultValueSql("''''''''''''''");

                    b.Property<string>("Kepadadivisi")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("kepadadivisi")
                        .HasDefaultValueSql("''''''''''''''");

                    b.Property<int>("Kode")
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<string>("Komplain")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("komplain")
                        .HasDefaultValueSql("''''''''''''''");

                    b.Property<int>("Statusdrpenerima")
                        .HasColumnType("int(1)")
                        .HasColumnName("statusdrpenerima");

                    b.Property<int>("Statusdrpengirim")
                        .HasColumnType("int(1)")
                        .HasColumnName("statusdrpengirim");

                    b.Property<DateTime>("Tgl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tgl")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.ToTable("daftarkomplain", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Daftarpujian", b =>
                {
                    b.Property<sbyte>("Bulan")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("bulan");

                    b.Property<int>("Dari")
                        .HasColumnType("int(11)")
                        .HasColumnName("dari");

                    b.Property<sbyte>("Dibaca")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("dibaca")
                        .HasComment("0 blm dibaca. 1 uda dibaca");

                    b.Property<sbyte>("Hari")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("hari");

                    b.Property<string>("Isi")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("isi")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("Kepada")
                        .HasColumnType("int(11)")
                        .HasColumnName("kepada");

                    b.Property<int>("Kode")
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<sbyte>("Prioritas")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("prioritas");

                    b.Property<short>("Tahun")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("tahun");

                    b.ToTable("daftarpujian", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Datagrupnilai", b =>
                {
                    b.Property<sbyte>("Bobot")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("bobot");

                    b.Property<sbyte>("Kodegrup")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kodegrup");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("nama")
                        .HasDefaultValueSql("''''''''''''''");

                    b.ToTable("datagrupnilai", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Datanilaipegawai", b =>
                {
                    b.Property<sbyte>("KodeNilai")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kodeNilai");

                    b.Property<int>("KodePeg")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodePeg");

                    b.ToTable("datanilaipegawai", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Dbawatagihan", b =>
                {
                    b.Property<int>("KodeH")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeH");

                    b.Property<int>("KodeHtrans")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeHTrans");

                    b.Property<short>("KodePelanggan")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("kodePelanggan");

                    b.Property<bool>("StatusNota")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("statusNota");

                    b.ToTable("dbawatagihan", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Dbelicina", b =>
                {
                    b.Property<float>("Harga")
                        .HasColumnType("float")
                        .HasColumnName("harga");

                    b.Property<int>("Jumlah")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah");

                    b.Property<int>("Kodebarang")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodebarang");

                    b.Property<short>("Koded")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("koded");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.ToTable("dbelicina", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Dbonusjete", b =>
                {
                    b.Property<bool>("Carahitung")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("carahitung");

                    b.Property<int>("Hrgmin")
                        .HasColumnType("int(11)")
                        .HasColumnName("hrgmin");

                    b.Property<int>("Kodebarang")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodebarang");

                    b.Property<sbyte>("Koded")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("koded");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<string>("Namasinonim")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("namasinonim")
                        .HasDefaultValueSql("''''''");

                    b.ToTable("dbonusjete", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Dbrgmasukretur", b =>
                {
                    b.Property<bool>("AdaPacking")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("adaPacking");

                    b.Property<int>("Harga")
                        .HasColumnType("int(11)")
                        .HasColumnName("harga");

                    b.Property<short>("Jumlah")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("jumlah");

                    b.Property<string>("KetMasuk")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("ketMasuk")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("keterangan")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("Kode")
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<short>("KodeD")
                        .HasColumnType("smallint(2)")
                        .HasColumnName("kodeD");

                    b.Property<int>("KodeH")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeH");

                    b.Property<int>("KodeHpengganti")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeHPengganti");

                    b.Property<short>("Kodebarang")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("kodebarang");

                    b.Property<short>("KodedPengganti")
                        .HasColumnType("smallint(2)")
                        .HasColumnName("kodedPengganti");

                    b.Property<string>("NmrSn")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("nmrSN")
                        .HasDefaultValueSql("''''''");

                    b.Property<DateTime>("TglGantiStok")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tglGantiStok")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<DateTime>("Tglterakhirbeli")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tglterakhirbeli")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.ToTable("dbrgmasukretur", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Dbukubesar", b =>
                {
                    b.Property<int>("Coa4debit")
                        .HasColumnType("int(11)")
                        .HasColumnName("coa4debit");

                    b.Property<int>("Coa4kredit")
                        .HasColumnType("int(11)")
                        .HasColumnName("coa4kredit");

                    b.Property<int>("Insertname")
                        .HasColumnType("int(11)")
                        .HasColumnName("insertname");

                    b.Property<DateTime>("Inserttime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("inserttime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<long>("Jumlah")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("jumlah");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("keterangan")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("Koded")
                        .HasColumnType("int(11)")
                        .HasColumnName("koded");

                    b.Property<string>("Kodestring")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("kodestring")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("Kodetgl")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodetgl");

                    b.Property<sbyte>("Posted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("posted")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime>("Tanggal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tanggal")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<sbyte>("Tipe")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("tipe")
                        .HasComment("0=normal,1=setoran,2=jurnalmemo,3=jurnalmemokomisi,4=jurnalmemoinsertbiasa,5=jpenjualan,6=jurnalmemopembelianCOD,7=jpembelian,8=hpp,9=jmemogaji,10=LapRLSaldoLaba");

                    b.Property<int>("Urut")
                        .HasColumnType("int(11)")
                        .HasColumnName("urut");

                    b.ToTable("dbukubesar", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Dcekharga", b =>
                {
                    b.Property<int>("Harga")
                        .HasColumnType("int(11)")
                        .HasColumnName("harga");

                    b.Property<int>("Kodebrg")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodebrg");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<string>("Namasinonim")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("namasinonim");

                    b.ToTable("dcekharga", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Dgajipegawai", b =>
                {
                    b.Property<sbyte>("Jenis")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("jenis")
                        .HasComment("0:tambahan,1:barangkurang,2:uangkurang,3:denda,4:tagihan,5:cicilan,6:fix,7:kata2");

                    b.Property<int>("Jumlah")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("keterangan")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("Koded")
                        .HasColumnType("int(11)")
                        .HasColumnName("koded");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<int>("Kodehtrans")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodehtrans");

                    b.Property<int>("Periksa")
                        .HasColumnType("int(11)")
                        .HasColumnName("periksa");

                    b.Property<bool>("Tipe")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("tipe")
                        .HasComment("1:detail, 2:total,3:fullheader");

                    b.Property<sbyte>("Urutan")
                        .HasColumnType("tinyint(2)")
                        .HasColumnName("urutan");

                    b.ToTable("dgajipegawai", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Dgrouppelanggan", b =>
                {
                    b.Property<string>("Hp")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("hp")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("Koded")
                        .HasColumnType("int(11)")
                        .HasColumnName("koded");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("nama")
                        .HasDefaultValueSql("''''''");

                    b.ToTable("dgrouppelanggan", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Dkategoribarang", b =>
                {
                    b.Property<sbyte>("Cnp")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("cnp");

                    b.Property<int>("Koded")
                        .HasColumnType("int(11)")
                        .HasColumnName("koded");

                    b.Property<sbyte>("Kodeh")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kodeh");

                    b.Property<sbyte>("Munculdimasterbarangapps")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("munculdimasterbarangapps")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nama");

                    b.Property<sbyte>("Perlusetharga")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("perlusetharga")
                        .HasDefaultValueSql("'1'");

                    b.Property<sbyte>("Sn")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("sn");

                    b.ToTable("dkategoribarang", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Dkirimretur", b =>
                {
                    b.Property<float>("Harga")
                        .HasColumnType("float")
                        .HasColumnName("harga");

                    b.Property<int>("Jumlah")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("keterangan")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("Kodebarang")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodebarang");

                    b.Property<short>("Koded")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("koded");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<sbyte>("Lunas")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("lunas")
                        .HasComment("0=belum,1=sedang,2=lunas,3=potnota");

                    b.ToTable("dkirimretur", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Dkomisidetail", b =>
                {
                    b.Property<sbyte>("Jenis")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("jenis")
                        .HasComment("0:biasa,1:gapok,2:bonusarea,3:barangkurang,4:uangkurang,5:barangspesial,6:denda,7:komisi,8:bonusjete,9:tagihan,10:cicilan,11:titipanuangsales");

                    b.Property<int>("Jumlah")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah");

                    b.Property<sbyte>("Koded")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("koded");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<int>("Kodehtrans")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodehtrans");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nama")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("Periksa")
                        .HasColumnType("int(11)")
                        .HasColumnName("periksa");

                    b.Property<sbyte>("Persen")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("persen");

                    b.Property<sbyte>("Urut")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("urut");

                    b.ToTable("dkomisidetail", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Dkomisiomzet", b =>
                {
                    b.Property<int>("Jumlah")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah");

                    b.Property<int>("Koded")
                        .HasColumnType("int(11)")
                        .HasColumnName("koded");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nama");

                    b.ToTable("dkomisiomzet", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Dkomisitargetomzet", b =>
                {
                    b.Property<int>("Bonus")
                        .HasColumnType("int(11)")
                        .HasColumnName("bonus");

                    b.Property<sbyte>("Koded")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("koded");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nama");

                    b.Property<long>("Omzet")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("omzet");

                    b.Property<long>("Target")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("target");

                    b.ToTable("dkomisitargetomzet", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Dlevelgaji", b =>
                {
                    b.Property<sbyte>("Efekabsensi")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("efekabsensi");

                    b.Property<float>("Jumlah")
                        .HasColumnType("float")
                        .HasColumnName("jumlah");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("keterangan");

                    b.Property<sbyte>("Koded")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("koded");

                    b.Property<sbyte>("Kodeh")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kodeh");

                    b.Property<int>("Maks")
                        .HasColumnType("int(11)")
                        .HasColumnName("maks");

                    b.Property<sbyte>("Tindakan")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("tindakan")
                        .HasComment("0=Total,1=Satuan Absensi,2=Bonus Kehadiran,3=Bonus Tidak Telat,4=Bonus Omzet,5=Insentif");

                    b.Property<int>("Urut")
                        .HasColumnType("int(11)")
                        .HasColumnName("urut");

                    b.ToTable("dlevelgaji", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Dnilaipegawai", b =>
                {
                    b.Property<sbyte>("Bobot")
                        .HasColumnType("tinyint(2)")
                        .HasColumnName("bobot");

                    b.Property<bool>("Jumlah")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("jumlah");

                    b.Property<int>("KodeNilai")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeNilai");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.ToTable("dnilaipegawai", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Dorder", b =>
                {
                    b.Property<bool>("Disiapkan")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("disiapkan")
                        .HasComment("0=belum, 1=disiapkan, 2=beres");

                    b.Property<int>("Harga")
                        .HasColumnType("int(11)")
                        .HasColumnName("harga");

                    b.Property<int>("Jumlah")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah");

                    b.Property<int>("Jumlahdikirim")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlahdikirim");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("keterangan")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Keterangancancel")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("keterangancancel")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("Kodebarang")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodebarang");

                    b.Property<short>("Koded")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("koded");

                    b.Property<sbyte>("KodedTrans")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kodedTrans");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<int>("KodehTrans")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodehTrans");

                    b.Property<int>("Komisi")
                        .HasColumnType("int(11)")
                        .HasColumnName("komisi");

                    b.Property<bool>("Lunas")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("lunas")
                        .HasComment("0:belum. 1: kurang, 2: lunas. 3:cancel, 4:menyusul, 5:berespaksa");

                    b.Property<int>("Sisa")
                        .HasColumnType("int(11)")
                        .HasColumnName("sisa");

                    b.ToTable("dorder", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Dordercina", b =>
                {
                    b.Property<sbyte>("Bukumanualberes")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("bukumanualberes");

                    b.Property<float>("Harga")
                        .HasColumnType("float")
                        .HasColumnName("harga");

                    b.Property<int>("Jumlah")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah");

                    b.Property<int>("Kodebarang")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodebarang");

                    b.Property<sbyte>("Koded")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("koded");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<sbyte>("Packingberes")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("packingberes");

                    b.ToTable("dordercina", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Dpenggantikirimretur", b =>
                {
                    b.Property<int>("Harga")
                        .HasColumnType("int(11)")
                        .HasColumnName("harga");

                    b.Property<int>("Jumlah")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("keterangan")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("Kodebarang")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodebarang");

                    b.Property<short>("Koded")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("koded");

                    b.Property<short>("Kodedpengganti")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("kodedpengganti");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<int>("Kodehpengganti")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodehpengganti");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.ToTable("dpenggantikirimretur", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Dpenyesuaian", b =>
                {
                    b.Property<int>("Kodebrgmasuk")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodebrgmasuk");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.ToTable("dpenyesuaian", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Dpoinaward", b =>
                {
                    b.Property<sbyte>("KodePoinAward")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kodePoinAward");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<int>("Poin")
                        .HasColumnType("int(11)")
                        .HasColumnName("poin");

                    b.ToTable("dpoinaward", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Dpphtambahan", b =>
                {
                    b.Property<int>("Harga")
                        .HasColumnType("int(11)")
                        .HasColumnName("harga");

                    b.Property<short>("Jumlah")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("jumlah");

                    b.Property<sbyte>("Koded")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("koded");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<string>("Namabarang")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("namabarang")
                        .HasDefaultValueSql("''''''");

                    b.ToTable("dpphtambahan", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Dproduktahunan", b =>
                {
                    b.Property<bool>("Carahitung")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("carahitung");

                    b.Property<int>("Kodebarang")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodebarang");

                    b.Property<sbyte>("Koded")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("koded");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<string>("Namasinonim")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("namasinonim")
                        .HasDefaultValueSql("''''''");

                    b.ToTable("dproduktahunan", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Dpromo", b =>
                {
                    b.Property<string>("Hadiahdiberikan")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("hadiahdiberikan");

                    b.Property<bool>("Hadiahlunas")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("hadiahlunas");

                    b.Property<bool>("History")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("history");

                    b.Property<int>("Kodehpromo")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodehpromo");

                    b.Property<int>("Kodehtrans")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodehtrans");

                    b.Property<DateTime>("Tglhadiahdiberikan")
                        .HasColumnType("date")
                        .HasColumnName("tglhadiahdiberikan");

                    b.ToTable("dpromo", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Dpromopoin", b =>
                {
                    b.Property<bool>("Carahitung")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("carahitung");

                    b.Property<sbyte>("Kode")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kode");

                    b.Property<int>("Kodebarang")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodebarang");

                    b.Property<string>("Namasinonim")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("namasinonim");

                    b.Property<float>("Poin")
                        .HasColumnType("float")
                        .HasColumnName("poin");

                    b.ToTable("dpromopoin", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Drefund", b =>
                {
                    b.Property<int>("Hargabaru")
                        .HasColumnType("int(11)")
                        .HasColumnName("hargabaru");

                    b.Property<int>("Hargalama")
                        .HasColumnType("int(11)")
                        .HasColumnName("hargalama");

                    b.Property<int>("Jumlah")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah");

                    b.Property<int>("Kodebarang")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodebarang");

                    b.Property<int>("Kodebm")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodebm");

                    b.Property<int>("Koded")
                        .HasColumnType("int(11)")
                        .HasColumnName("koded");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<int>("Kodehbeli")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodehbeli");

                    b.Property<string>("Nonota")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nonota")
                        .HasDefaultValueSql("''''''");

                    b.Property<DateTime>("Tgltrans")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tgltrans")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.ToTable("drefund", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Dresipengiriman", b =>
                {
                    b.Property<int>("Jumlah")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah");

                    b.Property<short>("Koded")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("koded");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<int>("Kodesupplier")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodesupplier");

                    b.Property<string>("Resi")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("resi")
                        .HasDefaultValueSql("''''''");

                    b.ToTable("dresipengiriman", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Dresipengirimankepelanggan", b =>
                {
                    b.Property<sbyte>("Kirimmelalui")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kirimmelalui")
                        .HasComment("1=DARAT,2=UDARA,3=LAUT");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<int>("Kodehtrans")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodehtrans");

                    b.Property<sbyte>("Koli")
                        .HasColumnType("tinyint(2)")
                        .HasColumnName("koli");

                    b.Property<bool>("OngkirBt")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("ongkirBT")
                        .HasComment("0=tdk,1=bayartujuan");

                    b.Property<bool>("Ongkirfree")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("ongkirfree")
                        .HasComment("0=tdkfree,1=free");

                    b.Property<string>("Resi")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("resi")
                        .HasDefaultValueSql("''''''");

                    b.ToTable("dresipengirimankepelanggan", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Dtargetomzettokopc", b =>
                {
                    b.Property<bool>("Carahitung")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("carahitung");

                    b.Property<int>("Hrgmin")
                        .HasColumnType("int(11)")
                        .HasColumnName("hrgmin");

                    b.Property<int>("Kodebarang")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodebarang");

                    b.Property<sbyte>("Koded")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("koded");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<string>("Namasinonim")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("namasinonim")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("Target")
                        .HasColumnType("int(11)")
                        .HasColumnName("target");

                    b.ToTable("dtargetomzettokopcs", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Dtran", b =>
                {
                    b.Property<int>("Harga")
                        .HasColumnType("int(11)")
                        .HasColumnName("harga");

                    b.Property<sbyte>("HargaOk")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("hargaOK");

                    b.Property<short>("Jumlah")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("jumlah");

                    b.Property<short>("Kodebarang")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("kodebarang");

                    b.Property<short>("Koded")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("koded");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<int>("Komisi")
                        .HasColumnType("int(11)")
                        .HasColumnName("komisi");

                    b.Property<bool?>("KuranginStok")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("kuranginStok")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Nmrsn")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("nmrsn")
                        .HasDefaultValueSql("''''''");

                    b.Property<sbyte>("PoinToko")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("poinToko");

                    b.Property<sbyte>("Tukartipe")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("tukartipe");

                    b.Property<int>("Untung")
                        .HasColumnType("int(11)")
                        .HasColumnName("untung");

                    b.ToTable("dtrans", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Dtransit", b =>
                {
                    b.Property<short>("Jumlah")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("jumlah");

                    b.Property<short>("Kodebarang")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("kodebarang");

                    b.Property<short>("Koded")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("koded");

                    b.Property<int>("Kodet")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodet");

                    b.Property<string>("Namapenerima")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("namapenerima")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("NmrSn")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("nmrSN")
                        .HasDefaultValueSql("''''''");

                    b.Property<bool>("Sudahdicek")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("sudahdicek");

                    b.ToTable("dtransit", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Dupdate", b =>
                {
                    b.Property<short>("Jumlah")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("jumlah");

                    b.Property<int>("KodeHupdate")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeHUpdate");

                    b.Property<short>("Kodebarang")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("kodebarang");

                    b.Property<int>("Koded")
                        .HasColumnType("int(11)")
                        .HasColumnName("koded");

                    b.ToTable("dupdate", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Emailpromohippo", b =>
                {
                    b.Property<int>("Kode")
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<int>("KodePelanggan")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodePelanggan");

                    b.Property<sbyte>("KodeSales")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kodeSales");

                    b.ToTable("emailpromohippo", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Glassperwilayah", b =>
                {
                    b.Property<short>("Jumlah")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("jumlah");

                    b.Property<short>("Kode")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("kode");

                    b.Property<string>("Lokasi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("lokasi");

                    b.Property<short>("Sales")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("sales");

                    b.ToTable("glassperwilayah", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Groupbaranghabi", b =>
                {
                    b.Property<sbyte>("Aktif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("aktif")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("email");

                    b.Property<int>("JumData")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumData");

                    b.Property<int>("JumHabis")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumHabis");

                    b.Property<sbyte>("Kode")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kode");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nama");

                    b.Property<sbyte>("Urut")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("urut");

                    b.ToTable("groupbaranghabis", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Hargasandisk", b =>
                {
                    b.Property<sbyte>("Aktif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("aktif")
                        .HasDefaultValueSql("'1'");

                    b.Property<int>("H1")
                        .HasColumnType("int(11)")
                        .HasColumnName("h1");

                    b.Property<int>("H2")
                        .HasColumnType("int(11)")
                        .HasColumnName("h2");

                    b.Property<int>("H3")
                        .HasColumnType("int(11)")
                        .HasColumnName("h3");

                    b.Property<int>("H4")
                        .HasColumnType("int(11)")
                        .HasColumnName("h4");

                    b.Property<int>("HolEcer")
                        .HasColumnType("int(11)")
                        .HasColumnName("hol_ecer");

                    b.Property<int>("HolGrosir")
                        .HasColumnType("int(11)")
                        .HasColumnName("hol_grosir");

                    b.Property<int>("HolOfficial")
                        .HasColumnType("int(11)")
                        .HasColumnName("hol_official");

                    b.Property<int>("HolPromo")
                        .HasColumnType("int(11)")
                        .HasColumnName("hol_promo");

                    b.Property<sbyte>("Insertname")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("insertname");

                    b.Property<DateTime>("Inserttime")
                        .HasColumnType("datetime")
                        .HasColumnName("inserttime");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("keterangan");

                    b.Property<int>("Kodebrg")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodebrg");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<int>("M1")
                        .HasColumnType("int(11)")
                        .HasColumnName("m1");

                    b.Property<int>("M2")
                        .HasColumnType("int(11)")
                        .HasColumnName("m2");

                    b.Property<int>("R1")
                        .HasColumnType("int(11)")
                        .HasColumnName("r1");

                    b.Property<int>("R2")
                        .HasColumnType("int(11)")
                        .HasColumnName("r2");

                    b.Property<int>("R3")
                        .HasColumnType("int(11)")
                        .HasColumnName("r3");

                    b.ToTable("hargasandisk", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Hbawatagihan", b =>
                {
                    b.Property<sbyte>("InsertName")
                        .HasColumnType("tinyint(2)")
                        .HasColumnName("insertName");

                    b.Property<DateTime>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insertTime")
                        .HasDefaultValueSql("'current_timestamp()'");

                    b.Property<int>("KodeH")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeH");

                    b.Property<sbyte>("Sales")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("sales");

                    b.Property<DateTime>("TglBawa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tglBawa")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.ToTable("hbawatagihan", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Hbayarpotongan", b =>
                {
                    b.Property<int>("Coa4")
                        .HasColumnType("int(11)")
                        .HasColumnName("coa4");

                    b.Property<int>("Jumlah")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("keterangan");

                    b.Property<int>("Kodedbukubesar")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodedbukubesar");

                    b.Property<int>("Kodedetailbayar")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodedetailbayar");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<int>("Kodehbayar")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodehbayar");

                    b.Property<int>("Kodesupplier")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodesupplier");

                    b.Property<int>("Piutang")
                        .HasColumnType("int(11)")
                        .HasColumnName("piutang");

                    b.Property<DateTime>("Tgllunas")
                        .HasColumnType("date")
                        .HasColumnName("tgllunas");

                    b.Property<sbyte>("Urut")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("urut");

                    b.ToTable("hbayarpotongan", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Hbayarsupplier", b =>
                {
                    b.Property<sbyte>("Bank")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("bank")
                        .HasDefaultValueSql("'1'")
                        .HasComment("0=tunai,1=bank");

                    b.Property<int>("Jumlah")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<sbyte>("Status")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("status")
                        .HasComment("0=belum,1=sudahterekam");

                    b.Property<DateTime>("Tanggal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tanggal")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.ToTable("hbayarsupplier", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Hbeli", b =>
                {
                    b.Property<sbyte>("Export")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("export")
                        .HasComment("0=Belum,1=Sudah");

                    b.Property<string>("HistoryNya")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("historyNya")
                        .HasDefaultValueSql("'''1'''")
                        .HasComment("1:belum,0:jhonny");

                    b.Property<bool>("InsertName")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("insertName");

                    b.Property<DateTime>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insertTime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<long>("Jumlah")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("jumlah");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)")
                        .HasColumnName("keterangan")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("KodeH")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeH");

                    b.Property<short>("KodeSupplier")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("kodeSupplier");

                    b.Property<string>("Kodefaktur")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("kodefaktur")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("Kodegudang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kodegudang")
                        .HasDefaultValueSql("'1'");

                    b.Property<int>("KodehBayar")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodehBayar");

                    b.Property<string>("Lunas")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("lunas")
                        .HasDefaultValueSql("'''0'''")
                        .HasComment("1 = lunas, 0 = belum lunas");

                    b.Property<string>("Nonota")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("nonota")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("Ppn")
                        .HasColumnType("int(11)")
                        .HasColumnName("ppn");

                    b.Property<sbyte>("Ppndiarsip")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("ppndiarsip");

                    b.Property<int>("TambahanLainnya")
                        .HasColumnType("int(11)")
                        .HasColumnName("tambahanLainnya");

                    b.Property<DateTime>("TglLaporPpn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tglLaporPPN")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<DateTime>("TglLunas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tglLunas")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<DateTime>("TglTrans")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tglTrans")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<DateTime>("Tglppn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tglppn")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<bool>("UpdateName")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("updateName");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updateTime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<sbyte>("Urut")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("urut");

                    b.ToTable("hbeli", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Hbelicina", b =>
                {
                    b.Property<float>("Berat")
                        .HasColumnType("float")
                        .HasColumnName("berat");

                    b.Property<int>("Hargaongkir")
                        .HasColumnType("int(11)")
                        .HasColumnName("hargaongkir");

                    b.Property<bool?>("Historynya")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("historynya")
                        .HasDefaultValueSql("'2'")
                        .HasComment("2=Belum Periksa,1=Sudah");

                    b.Property<sbyte>("Insertname")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("insertname");

                    b.Property<DateTime>("Inserttime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("inserttime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<int>("Jumlah")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah");

                    b.Property<bool>("Kirimvia")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("kirimvia")
                        .HasComment("0=air,1=sea");

                    b.Property<int>("Kodeekspedisi")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeekspedisi")
                        .HasComment("0=FASDELI,1=INTEGRA");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<int>("Kodehongkircina")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodehongkircina");

                    b.Property<sbyte>("Kodesuppliercina")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kodesuppliercina");

                    b.Property<bool>("Lunas")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("lunas");

                    b.Property<int>("Marking")
                        .HasColumnType("int(11)")
                        .HasColumnName("marking");

                    b.Property<int>("Ongkirtambahan")
                        .HasColumnType("int(11)")
                        .HasColumnName("ongkirtambahan");

                    b.Property<bool>("Sudahdatang")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("sudahdatang");

                    b.Property<DateTime>("Tglkirim")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tglkirim")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<DateTime>("Tgllunas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tgllunas")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<DateTime>("Tglnyampe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tglnyampe")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<sbyte>("Updatename")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("updatename");

                    b.Property<DateTime>("Updatetime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updatetime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.ToTable("hbelicina", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Hbonusjete", b =>
                {
                    b.Property<int>("Bonus1")
                        .HasColumnType("int(11)")
                        .HasColumnName("bonus1");

                    b.Property<int>("Bonus2")
                        .HasColumnType("int(11)")
                        .HasColumnName("bonus2");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nama");

                    b.Property<int>("Qty1")
                        .HasColumnType("int(11)")
                        .HasColumnName("qty1");

                    b.Property<int>("Qty2")
                        .HasColumnType("int(11)")
                        .HasColumnName("qty2");

                    b.ToTable("hbonusjete", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Hbrgmasukretur", b =>
                {
                    b.Property<string>("HistoryNya")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("historyNya")
                        .HasDefaultValueSql("''''''");

                    b.Property<bool>("InsertName")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("insertName");

                    b.Property<DateTime>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insertTime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("keterangan")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("KodeH")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeH");

                    b.Property<short>("KodePelanggan")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("kodePelanggan");

                    b.Property<short>("KodePemberi")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("kodePemberi");

                    b.Property<sbyte>("Kodesales")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kodesales");

                    b.Property<string>("NamaCust")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("namaCust")
                        .HasDefaultValueSql("''''''");

                    b.Property<DateTime>("TglTrans")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tglTrans")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<bool>("UpdateName")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("updateName");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updateTime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.ToTable("hbrgmasukretur", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Hcekharga", b =>
                {
                    b.Property<sbyte>("Carahitung")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("carahitung")
                        .HasComment("0=Kode,1=Sinonim Nama");

                    b.Property<sbyte>("Kodeh")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kodeh");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.ToTable("hcekharga", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Hdetailbayar", b =>
                {
                    b.Property<sbyte>("InsertName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("insertName")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insertTime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<int>("Jumlah")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah");

                    b.Property<int>("Kode")
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<int>("Kodehbayar")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodehbayar");

                    b.Property<int>("Kodesupplier")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodesupplier");

                    b.ToTable("hdetailbayar", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Hgajipegawai", b =>
                {
                    b.Property<sbyte>("Bulan")
                        .HasColumnType("tinyint(2)")
                        .HasColumnName("bulan");

                    b.Property<sbyte>("InsertName")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("insertName");

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime")
                        .HasColumnName("insertTime");

                    b.Property<int>("Jumlah")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah");

                    b.Property<int>("JumlahFull")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlahFULL");

                    b.Property<int>("KodeFormGaji")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeFormGaji");

                    b.Property<int>("KodePeg")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodePeg");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<bool?>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'3'")
                        .HasComment("3=Belum,2=siapdiberikan,1=sudahdiberikan,0=sudahdipotong");

                    b.Property<int>("Tahun")
                        .HasColumnType("int(4)")
                        .HasColumnName("tahun");

                    b.Property<DateTime>("TglBagi")
                        .HasColumnType("datetime")
                        .HasColumnName("tglBagi");

                    b.Property<DateTime>("TglPotong")
                        .HasColumnType("datetime")
                        .HasColumnName("tglPotong");

                    b.Property<bool>("Tunai")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("tunai")
                        .HasComment("0:Tunai;1:TT");

                    b.Property<sbyte>("UpdateName")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("updateName");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("updateTime");

                    b.ToTable("hgajipegawai", (string)null);

                    b.HasComment("1 belum dicek, 0 uda dicek");
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Hgrouppelanggan", b =>
                {
                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nama");

                    b.ToTable("hgrouppelanggan", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Historyka", b =>
                {
                    b.Property<bool>("InsertName")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("insertName");

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime")
                        .HasColumnName("insertTime");

                    b.Property<int>("Jumlah")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("keterangan");

                    b.Property<int>("Kode")
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<DateTime>("TglKas")
                        .HasColumnType("date")
                        .HasColumnName("tglKas");

                    b.ToTable("historykas", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Historylimit", b =>
                {
                    b.Property<int>("Insertname")
                        .HasColumnType("int(11)")
                        .HasColumnName("insertname");

                    b.Property<int>("Jumlah")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah");

                    b.Property<int>("Kode")
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<int>("Kodepelanggan")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodepelanggan");

                    b.Property<DateTime>("Tglnaik")
                        .HasColumnType("datetime")
                        .HasColumnName("tglnaik");

                    b.ToTable("historylimit", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Hjamkerja", b =>
                {
                    b.Property<sbyte>("Batasjammasuk1")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("batasjammasuk1");

                    b.Property<sbyte>("Batasjammasuk2")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("batasjammasuk2");

                    b.Property<sbyte>("Batasjampulang1")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("batasjampulang1");

                    b.Property<sbyte>("Batasjampulang2")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("batasjampulang2");

                    b.Property<sbyte>("Jammasuk")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("jammasuk");

                    b.Property<sbyte>("Jampulang")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("jampulang");

                    b.Property<sbyte>("Kode")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kode");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nama");

                    b.ToTable("hjamkerja", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Hkategoribarang", b =>
                {
                    b.Property<int>("Kodeh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<sbyte>("Aktif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("aktif")
                        .HasDefaultValueSql("'1'");

                    b.Property<sbyte>("Cektahunan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("cektahunan")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    b.Property<int>("Hargakhusus")
                        .HasColumnType("int(11)")
                        .HasColumnName("hargakhusus");

                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("nama")
                        .HasDefaultValueSql("''''''");

                    b.Property<sbyte>("Perlusetharga")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("perlusetharga")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Kodeh");

                    b.ToTable("hkategoribarang", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Hkirimretur", b =>
                {
                    b.Property<sbyte>("HistoryNya")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("historyNya")
                        .HasDefaultValueSql("'1'")
                        .HasComment("1:belum,0:jhonny");

                    b.Property<bool>("InsertName")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("insertName");

                    b.Property<DateTime>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insertTime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<int>("Jumlah")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)")
                        .HasColumnName("keterangan")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("KodeH")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeH");

                    b.Property<short>("KodeSupplier")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("kodeSupplier");

                    b.Property<sbyte>("Lunas")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("lunas")
                        .HasComment("1 = lunas, 0 = belum lunas");

                    b.Property<sbyte>("Penyesuaian")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("penyesuaian")
                        .HasComment("0=returbiasa,1=penyesuaian");

                    b.Property<DateTime>("TglLunas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tglLunas")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<DateTime>("TglTrans")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tglTrans")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<bool>("UpdateName")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("updateName");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updateTime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.ToTable("hkirimretur", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Hkomisi", b =>
                {
                    b.Property<int>("Bonusarea")
                        .HasColumnType("int(11)")
                        .HasColumnName("bonusarea");

                    b.Property<int>("Bonusjete")
                        .HasColumnType("int(11)")
                        .HasColumnName("bonusjete");

                    b.Property<sbyte>("Bulan")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("bulan");

                    b.Property<int>("Jumlah")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<int>("Kodesales")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodesales");

                    b.Property<int>("Komisi")
                        .HasColumnType("int(11)")
                        .HasColumnName("komisi");

                    b.Property<int>("Komisidanbonus")
                        .HasColumnType("int(11)")
                        .HasColumnName("komisidanbonus");

                    b.Property<float>("PersenSedia")
                        .HasColumnType("float")
                        .HasColumnName("persenSedia");

                    b.Property<int>("Sisagaji")
                        .HasColumnType("int(11)")
                        .HasColumnName("sisagaji");

                    b.Property<sbyte>("Status")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("status")
                        .HasComment("0=belum,1=sudah");

                    b.Property<int>("Tahun")
                        .HasColumnType("int(11)")
                        .HasColumnName("tahun");

                    b.Property<DateTime>("Tgltt")
                        .HasColumnType("date")
                        .HasColumnName("tgltt");

                    b.Property<long>("Totalomzet")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("totalomzet");

                    b.Property<long>("Untung")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("untung");

                    b.ToTable("hkomisi", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Hlevelgaji", b =>
                {
                    b.Property<sbyte>("Formatspg")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("formatspg")
                        .HasComment("Bila 1, maka gaji akan FIX di jumlah hari SPG (1 minggu libur 4x");

                    b.Property<sbyte>("Kodeh")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kodeh");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nama");

                    b.ToTable("hlevelgaji", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Hlunasinmassal", b =>
                {
                    b.Property<int>("Insertname")
                        .HasColumnType("int(11)")
                        .HasColumnName("insertname");

                    b.Property<DateTime>("Inserttime")
                        .HasColumnType("datetime")
                        .HasColumnName("inserttime");

                    b.Property<int>("Jumlah")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<sbyte>("Periksa")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("periksa")
                        .HasComment("0=Belum,1=Sudah");

                    b.Property<DateTime>("Tanggal")
                        .HasColumnType("date")
                        .HasColumnName("tanggal");

                    b.ToTable("hlunasinmassal", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Hnilaipegawai", b =>
                {
                    b.Property<sbyte>("Bulan")
                        .HasColumnType("tinyint(2)")
                        .HasColumnName("bulan");

                    b.Property<int>("KodePeg")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodePeg");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<string>("Pesan")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("pesan");

                    b.Property<bool?>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'1'")
                        .HasComment("0 : TDK BISA UPDATE, 1 BISA UPDATE");

                    b.Property<int>("Tahun")
                        .HasColumnType("int(4)")
                        .HasColumnName("tahun");

                    b.ToTable("hnilaipegawai", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Hongkircina", b =>
                {
                    b.Property<int>("Jumlah")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nama");

                    b.Property<DateTime>("Tanggal")
                        .HasColumnType("date")
                        .HasColumnName("tanggal");

                    b.ToTable("hongkircina", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Horder", b =>
                {
                    b.Property<string>("Barcodeonline")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("barcodeonline")
                        .HasDefaultValueSql("''''''");

                    b.Property<bool>("Dicetak")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("dicetak");

                    b.Property<bool?>("Historynya")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("historynya")
                        .HasDefaultValueSql("'3'")
                        .HasComment("5=BelumdicekOL");

                    b.Property<string>("Infopenting")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("infopenting")
                        .HasDefaultValueSql("''''''");

                    b.Property<sbyte>("Insertname")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("insertname");

                    b.Property<DateTime>("Inserttime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("inserttime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<int>("Jumlah")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)")
                        .HasColumnName("keterangan")
                        .HasDefaultValueSql("''''''");

                    b.Property<bool>("Kirimmelalui")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("kirimmelalui");

                    b.Property<int>("Kodeexp")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeexp");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<int>("Kodeonline")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeonline");

                    b.Property<int>("Kodeorderapps")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeorderapps");

                    b.Property<int>("Kodepelanggan")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodepelanggan");

                    b.Property<sbyte>("Kodepenyiap")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kodepenyiap");

                    b.Property<sbyte>("Kodesales")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kodesales");

                    b.Property<bool>("Lunas")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("lunas");

                    b.Property<string>("NamaCust")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("namaCust")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("NmrHp")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("nmrHP")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("NoSeriOnline")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("noSeriOnline")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("Ppn")
                        .HasColumnType("int(11)")
                        .HasColumnName("ppn");

                    b.Property<sbyte>("StokSales")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("stokSales");

                    b.Property<sbyte>("Sudahupdatephone")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("sudahupdatephone")
                        .HasComment("UNTUK UPDATE NMR HP");

                    b.Property<DateTime>("Tglcetak")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("tglcetak")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<DateTime>("Tglorder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tglorder")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<DateTime>("Tgltempo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tgltempo")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<bool?>("Tipetempo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("tipetempo")
                        .HasDefaultValueSql("'30'");

                    b.Property<sbyte>("Updatename")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("updatename");

                    b.Property<DateTime>("Updatetime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updatetime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.ToTable("horder", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Hordercina", b =>
                {
                    b.Property<sbyte>("Insertname")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("insertname");

                    b.Property<DateTime>("Inserttime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("inserttime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<int>("Jumlah")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah");

                    b.Property<int>("Jumlahdp")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlahdp");

                    b.Property<sbyte>("Kelengkapanberes")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kelengkapanberes");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("keterangan")
                        .HasDefaultValueSql("''''''");

                    b.Property<sbyte>("Kirim")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kirim");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<int>("Kodesupplier")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodesupplier");

                    b.Property<DateTime>("Perkiraantglkirim")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("perkiraantglkirim")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<DateTime>("Tglkirim")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tglkirim")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<DateTime>("Tglorder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tglorder")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<sbyte?>("Updatename")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("updatename")
                        .HasDefaultValueSql("'0'");

                    b.Property<DateTime>("Updatetime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updatetime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.ToTable("hordercina", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Hpakaiinventari", b =>
                {
                    b.Property<sbyte>("Aktif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("aktif")
                        .HasDefaultValueSql("'1'");

                    b.Property<int>("KodeInventaris")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeInventaris");

                    b.Property<int>("KodePegawai")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodePegawai");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<DateTime>("TglPakai")
                        .HasColumnType("date")
                        .HasColumnName("tglPakai");

                    b.ToTable("hpakaiinventaris", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Hpenggantikirimretur", b =>
                {
                    b.Property<sbyte>("HistoryNya")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("historyNya")
                        .HasDefaultValueSql("'1'")
                        .HasComment("1:belum,0:jhonny");

                    b.Property<bool>("InsertName")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("insertName");

                    b.Property<DateTime>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insertTime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<int>("Jumlah")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)")
                        .HasColumnName("keterangan")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("KodeH")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeH");

                    b.Property<short>("KodeSupplier")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("kodeSupplier");

                    b.Property<string>("Nonota")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("nonota")
                        .HasDefaultValueSql("''''''");

                    b.Property<sbyte>("Status")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("status")
                        .HasComment("0=gantiretur, 1=potongnota");

                    b.Property<bool>("Sudahexport")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("sudahexport");

                    b.Property<bool>("Sudahpotongnota")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("sudahpotongnota");

                    b.Property<DateTime>("TglTrans")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tglTrans")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<DateTime>("Tglpotongnota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tglpotongnota")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<bool>("UpdateName")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("updateName");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updateTime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.ToTable("hpenggantikirimretur", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Hpengiriman", b =>
                {
                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<int>("Kodehtrans")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodehtrans");

                    b.Property<int>("Kodepengiriman")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodepengiriman");

                    b.Property<DateTime>("Tglkirim")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("tglkirim")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.ToTable("hpengiriman", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Hpenyesuaian", b =>
                {
                    b.Property<bool?>("Historynya")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("historynya")
                        .HasDefaultValueSql("'1'")
                        .HasComment("0=sudahdiperiksa,1=belum");

                    b.Property<sbyte>("Insertname")
                        .HasColumnType("tinyint(2)")
                        .HasColumnName("insertname");

                    b.Property<DateTime>("Inserttime")
                        .HasColumnType("datetime")
                        .HasColumnName("inserttime");

                    b.Property<int>("Kodegudang")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodegudang");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(6)")
                        .HasColumnName("kodeh");

                    b.Property<DateTime>("Tgltrans")
                        .HasColumnType("date")
                        .HasColumnName("tgltrans");

                    b.ToTable("hpenyesuaian", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Hpoinaward", b =>
                {
                    b.Property<sbyte>("Bulan")
                        .HasColumnType("tinyint(2)")
                        .HasColumnName("bulan");

                    b.Property<sbyte>("InsertName")
                        .HasColumnType("tinyint(2)")
                        .HasColumnName("insertName");

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime")
                        .HasColumnName("insertTime");

                    b.Property<int>("Jumlah")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah");

                    b.Property<int>("KodePeg")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodePeg");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<int>("Tahun")
                        .HasColumnType("int(4)")
                        .HasColumnName("tahun");

                    b.ToTable("hpoinaward", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Hppntambahan", b =>
                {
                    b.Property<sbyte>("InsertName")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("insertName");

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime")
                        .HasColumnName("insertTime");

                    b.Property<long>("Jumlah")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("jumlah");

                    b.Property<int>("KodeH")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeH");

                    b.Property<int>("KodePelanggan")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodePelanggan");

                    b.Property<int>("Ppn")
                        .HasColumnType("int(11)")
                        .HasColumnName("ppn");

                    b.Property<sbyte>("Ppndiarsip")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("ppndiarsip");

                    b.Property<DateTime>("TglLaporPpn")
                        .HasColumnType("date")
                        .HasColumnName("tglLaporPPN");

                    b.Property<DateTime>("TglTrans")
                        .HasColumnType("date")
                        .HasColumnName("tglTrans");

                    b.Property<sbyte>("Tipe")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("tipe")
                        .HasComment("0=tambahan,1=gunggungan");

                    b.ToTable("hppntambahan", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Hproduktahunan", b =>
                {
                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nama");

                    b.ToTable("hproduktahunan", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Hpromo", b =>
                {
                    b.Property<bool?>("Aktif")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("aktif")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Hadiah")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("hadiah");

                    b.Property<int>("Kode")
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("nama");

                    b.Property<string>("Target")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("target");

                    b.Property<DateTime>("Tglakhir")
                        .HasColumnType("date")
                        .HasColumnName("tglakhir");

                    b.Property<DateTime>("Tglawal")
                        .HasColumnType("date")
                        .HasColumnName("tglawal");

                    b.ToTable("hpromo", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Hrefund", b =>
                {
                    b.Property<string>("HistoryNya")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("historyNya")
                        .HasDefaultValueSql("'''1'''")
                        .HasComment("1:belum,0:jhonny");

                    b.Property<bool>("InsertName")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("insertName");

                    b.Property<DateTime>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insertTime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<int>("Jumlah")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)")
                        .HasColumnName("keterangan")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("KodeH")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeH");

                    b.Property<int>("KodeSupplier")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeSupplier");

                    b.Property<string>("Lunas")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("lunas")
                        .HasDefaultValueSql("'''0'''")
                        .HasComment("1 = lunas, 0 = belum lunas");

                    b.Property<DateTime>("TglLunas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tglLunas")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<DateTime>("TglTrans")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tglTrans")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<bool>("UpdateName")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("updateName");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updateTime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.ToTable("hrefund", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Hsidikjari", b =>
                {
                    b.Property<sbyte>("Jamacuan")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("jamacuan");

                    b.Property<DateTime>("Jamsidikjari")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("jamsidikjari")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<bool>("Jenisabsen")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("jenisabsen")
                        .HasComment("0=masuk,1=pulang");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<int>("Kodeonline")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeonline");

                    b.Property<int>("Kodepegawai")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodepegawai");

                    b.ToTable("hsidikjari", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Htran", b =>
                {
                    b.Property<int>("KodeH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeH");

                    b.Property<bool>("Adminkiriman")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("adminkiriman");

                    b.Property<string>("BagiKomisi")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("bagiKomisi")
                        .HasDefaultValueSql("'''0'''")
                        .HasComment("1 = uda bagi, 0 = belum bagi");

                    b.Property<string>("Barcodeonline")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("barcodeonline")
                        .HasDefaultValueSql("''''''''''''''");

                    b.Property<string>("CustOlkodepos")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("custOLKodepos")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("CustOlkota")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("custOLkota")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("CustOlprovinsi")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("custOLprovinsi")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("CustOlwilayah")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("custOLwilayah")
                        .HasDefaultValueSql("''''''");

                    b.Property<bool>("DiCetak")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("diCetak");

                    b.Property<int>("Dikirim")
                        .HasColumnType("int(11)")
                        .HasColumnName("dikirim");

                    b.Property<string>("HistoryNya")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("historyNya")
                        .HasDefaultValueSql("'''4'''")
                        .HasComment("3:belum,2:yanti,1:audit,0:jhonny");

                    b.Property<string>("Infopenting")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(31)
                        .HasColumnType("varchar(31)")
                        .HasColumnName("infopenting")
                        .HasDefaultValueSql("''''''");

                    b.Property<sbyte>("InsertName")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("insertName");

                    b.Property<DateTime?>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insertTime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<int>("JumKoli")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumKoli");

                    b.Property<int>("Jumlah")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah");

                    b.Property<int>("JumlahKomisi")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlahKomisi");

                    b.Property<string>("JumlahOnString")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("jumlahOnString")
                        .HasDefaultValueSql("'''0'''");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)")
                        .HasColumnName("keterangan")
                        .HasDefaultValueSql("''''''''''''''");

                    b.Property<int>("KodePelanggan")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodePelanggan");

                    b.Property<sbyte>("KodeSales")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kodeSales");

                    b.Property<int>("Kodegudang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kodegudang")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Kodenota")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("kodenota")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("Kodeonline")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeonline");

                    b.Property<int?>("Kodeorderapps")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeorderapps")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("Lunas")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("lunas")
                        .HasDefaultValueSql("'''0'''")
                        .HasComment("1 = lunas, 0 = belum lunas");

                    b.Property<string>("NamaCust")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("namaCust")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("NmrHp")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("nmrHP")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("NoOrder")
                        .HasColumnType("int(11)")
                        .HasColumnName("noOrder");

                    b.Property<string>("NoSeriOnline")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("noSeriOnline")
                        .HasDefaultValueSql("''''''''''''''");

                    b.Property<int>("Noretur")
                        .HasColumnType("int(11)")
                        .HasColumnName("noretur");

                    b.Property<int>("Notrans")
                        .HasColumnType("int(11)")
                        .HasColumnName("notrans");

                    b.Property<short>("PoinToko")
                        .HasColumnType("smallint(4)")
                        .HasColumnName("poinToko");

                    b.Property<int>("Ppn")
                        .HasColumnType("int(11)")
                        .HasColumnName("ppn");

                    b.Property<sbyte>("Ppndiarsip")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("ppndiarsip");

                    b.Property<string>("Retur")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("retur")
                        .HasDefaultValueSql("'''0'''")
                        .HasComment("0=NORMAL. 2=RETUR. 1 TIDAK DIPAKE");

                    b.Property<short>("SalesPenagih")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("salesPenagih");

                    b.Property<bool>("StatusNota")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("statusNota");

                    b.Property<bool>("Stoknota")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("stoknota");

                    b.Property<sbyte>("Sudahupdateorderapps")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("sudahupdateorderapps")
                        .HasComment("BUAT KEPERLUAN CROWN UPDATE STATUS TERKIRIM DI APPS DORAN.ID");

                    b.Property<sbyte>("Sudahupdatephone")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("sudahupdatephone")
                        .HasComment("UNTUK UPDATE NMR HP");

                    b.Property<int>("TambahanLainnya")
                        .HasColumnType("int(11)")
                        .HasColumnName("tambahanLainnya");

                    b.Property<DateTime>("TglBagiKomisi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tglBagiKomisi")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<DateTime>("TglLaporPpn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tglLaporPPN")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<DateTime>("TglLunas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tglLunas")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<DateTime>("TglPpn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tglPPN")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<DateTime>("TglTrans")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tglTrans")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<DateTime>("Tglcek")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("tglcek")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''")
                        .HasComment("Buat isi kapan dicek oleh tim finance");

                    b.Property<DateTime>("Tgldikirim")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("tgldikirim")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<DateTime>("Tgltempo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tgltempo")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<bool?>("Tipetempo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("tipetempo")
                        .HasDefaultValueSql("'30'");

                    b.Property<int>("Untung")
                        .HasColumnType("int(11)")
                        .HasColumnName("untung");

                    b.Property<sbyte>("UpdateName")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("updateName");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updateTime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.HasKey("KodeH")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "NoSeriOnline" }, "noSeriOnline");

                    b.HasIndex(new[] { "TglTrans", "KodePelanggan", "Kodegudang" }, "tglTrans");

                    b.ToTable("htrans", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Htransit", b =>
                {
                    b.Property<int>("KodeT")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeT");

                    b.Property<sbyte?>("Export")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("export")
                        .HasDefaultValueSql("'0'")
                        .HasComment("0=Belum,1=Sudah");

                    b.Property<string>("HistoryNya")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("historyNya")
                        .HasDefaultValueSql("'''0'''");

                    b.Property<sbyte?>("InsertName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("insertName")
                        .HasDefaultValueSql("'0'");

                    b.Property<DateTime?>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insertTime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<string>("Keterangan")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("keterangan")
                        .HasDefaultValueSql("''''''");

                    b.Property<short?>("KodeGudangTujuan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint(6)")
                        .HasColumnName("kodeGudangTujuan")
                        .HasDefaultValueSql("'0'");

                    b.Property<int?>("Kodegudang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kodegudang")
                        .HasDefaultValueSql("'0'");

                    b.Property<int?>("Kodeonline")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeonline")
                        .HasDefaultValueSql("'0'");

                    b.Property<sbyte?>("Kodepenyiap")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kodepenyiap")
                        .HasDefaultValueSql("'0'");

                    b.Property<DateTime?>("TglTrans")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tglTrans")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<sbyte?>("UpdateName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("updateName")
                        .HasDefaultValueSql("'0'");

                    b.Property<DateTime?>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updateTime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.HasKey("KodeT")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "KodeGudangTujuan" }, "kodeGudangTujuan");

                    b.HasIndex(new[] { "Kodegudang" }, "kodegudang");

                    b.ToTable("htransit", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Htuga", b =>
                {
                    b.Property<int>("Kodeh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<sbyte>("Kodesales")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kodesales");

                    b.Property<int>("Kodetugas")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodetugas");

                    b.Property<sbyte>("Poin")
                        .HasColumnType("tinyint(2)")
                        .HasColumnName("poin");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.Property<DateTime>("Tgldapattugas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tgldapattugas")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<DateTime>("Tglselesaitugas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tglselesaitugas")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.HasKey("Kodeh")
                        .HasName("PRIMARY");

                    b.ToTable("htugas", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Hupdate", b =>
                {
                    b.Property<int>("KodeHupdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeHUpdate");

                    b.Property<sbyte>("InsertName")
                        .HasColumnType("tinyint(2)")
                        .HasColumnName("insertName");

                    b.Property<DateTime>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insertTime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)")
                        .HasColumnName("keterangan")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("KodeH")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeH");

                    b.HasKey("KodeHupdate")
                        .HasName("PRIMARY");

                    b.ToTable("hupdate", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Hwunderlist", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<int>("Adminselesai")
                        .HasColumnType("int(11)")
                        .HasColumnName("adminselesai");

                    b.Property<int>("Insertname")
                        .HasColumnType("int(11)")
                        .HasColumnName("insertname");

                    b.Property<int>("Kodepegawai")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodepegawai");

                    b.Property<string>("Pekerjaan")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("pekerjaan");

                    b.Property<sbyte>("Status")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("status");

                    b.Property<DateTime>("Tglbuat")
                        .HasColumnType("date")
                        .HasColumnName("tglbuat");

                    b.Property<DateTime>("Tglselesai")
                        .HasColumnType("date")
                        .HasColumnName("tglselesai");

                    b.Property<DateTime>("Tgltarget")
                        .HasColumnType("date")
                        .HasColumnName("tgltarget");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("hwunderlist", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Idolshop", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<int>("Jumfollower")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumfollower");

                    b.Property<int>("Jumfoto")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumfoto");

                    b.Property<int>("Kodesales")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodesales");

                    b.Property<string>("Namatoko")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("namatoko");

                    b.Property<string>("Nohpterdaftar")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nohpterdaftar");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("password");

                    b.Property<sbyte>("Tipeid")
                        .HasColumnType("tinyint(2)")
                        .HasColumnName("tipeid");

                    b.Property<string>("Userid")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("userid");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("idolshop", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Jadwalluarkotum", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<int>("Insertname")
                        .HasColumnType("int(11)")
                        .HasColumnName("insertname");

                    b.Property<DateTime>("Inserttime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("inserttime")
                        .HasDefaultValueSql("'current_timestamp()'");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("keterangan")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("Kodepegawai")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodepegawai");

                    b.Property<int>("Kodesupir")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodesupir");

                    b.Property<int>("Status")
                        .HasColumnType("int(11)")
                        .HasColumnName("status");

                    b.Property<DateTime>("Tanggal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tanggal")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("jadwalluarkota", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Jenisidolshop", b =>
                {
                    b.Property<sbyte>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(2)")
                        .HasColumnName("kode");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nama");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("jenisidolshop", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.JobsFailed", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20) unsigned")
                        .HasColumnName("id");

                    b.Property<string>("Connection")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("connection");

                    b.Property<string>("Exception")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("exception");

                    b.Property<DateTime>("FailedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("failed_at")
                        .HasDefaultValueSql("'current_timestamp()'");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("payload");

                    b.Property<string>("Queue")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("queue");

                    b.HasKey("Id");

                    b.ToTable("jobs_failed", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.JobsRunning", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("ConnectionName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("connection_name")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<int?>("CurrentOffset")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("current_offset")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<int?>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("job_id")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("Log")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasColumnName("log")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("ShopId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("shop_id")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<int?>("TotalData")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("total_data")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("'NULL'");

                    b.HasKey("Id");

                    b.ToTable("jobs_running", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Kaizen", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(4)")
                        .HasColumnName("kode");

                    b.Property<int>("Admin")
                        .HasColumnType("int(4)")
                        .HasColumnName("admin");

                    b.Property<sbyte>("Bulan")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("bulan");

                    b.Property<sbyte>("Diperiksa")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("diperiksa");

                    b.Property<string>("Isi")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("isi");

                    b.Property<string>("Judul")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("judul");

                    b.Property<int>("Kodepegawai")
                        .HasColumnType("int(4)")
                        .HasColumnName("kodepegawai");

                    b.Property<int>("Tahun")
                        .HasColumnType("int(4)")
                        .HasColumnName("tahun");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("kaizen", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Komponenprestasi", b =>
                {
                    b.Property<sbyte>("BackAbu")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("backAbu");

                    b.Property<short>("Baris")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("baris");

                    b.Property<string>("Fungsi")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("fungsi")
                        .HasDefaultValueSql("''''''");

                    b.Property<short>("Kolom")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("kolom");

                    b.Property<short>("Lebar")
                        .HasColumnType("smallint(11)")
                        .HasColumnName("lebar");

                    b.Property<sbyte>("Tebal")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("tebal");

                    b.ToTable("komponenprestasi", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Laporanakuntansi", b =>
                {
                    b.Property<int>("Bulan")
                        .HasColumnType("int(11)")
                        .HasColumnName("bulan");

                    b.Property<int>("Insertname")
                        .HasColumnType("int(11)")
                        .HasColumnName("insertname");

                    b.Property<DateTime>("Inserttime")
                        .HasColumnType("datetime")
                        .HasColumnName("inserttime");

                    b.Property<sbyte>("Jenis")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("jenis")
                        .HasComment("0=NR,1=LR");

                    b.Property<long>("Jumlah")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("jumlah");

                    b.Property<int>("Kodecoa4")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodecoa4");

                    b.Property<int>("Tahun")
                        .HasColumnType("int(11)")
                        .HasColumnName("tahun");

                    b.ToTable("laporanakuntansi", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Laporanharian", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<int>("Bulan")
                        .HasColumnType("int(11)")
                        .HasColumnName("bulan");

                    b.Property<int>("Jumtidaklaporan")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumtidaklaporan");

                    b.Property<int>("Kodepegawai")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodepegawai");

                    b.Property<int>("Tahun")
                        .HasColumnType("int(11)")
                        .HasColumnName("tahun");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("laporanharian", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Logfile", b =>
                {
                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasColumnName("keterangan")
                        .HasDefaultValueSql("''''''");

                    b.Property<DateTime>("Tanggal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("tanggal")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<bool>("Username")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("username");

                    b.ToTable("logfile", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Logfileserver", b =>
                {
                    b.Property<string>("Isilaporan")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("longtext")
                        .HasColumnName("isilaporan")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("Kode")
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<short>("Pengirim")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("pengirim");

                    b.Property<string>("Perintah")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("perintah")
                        .HasDefaultValueSql("''''''''''''''");

                    b.Property<bool>("Sudahdibalas")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("sudahdibalas")
                        .HasComment("0:BELUM. 1:SUDAH");

                    b.Property<DateTime>("Tgl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tgl")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.HasIndex(new[] { "Kode" }, "kode");

                    b.ToTable("logfileserver", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.LogUpdatePhone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<int?>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("brand_id")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("'current_timestamp()'");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "BrandId" }, "brand_id");

                    b.ToTable("log_update_phone", (string)null);

                    b.HasComment("table untuk log saat terakhir ubah nomor hp pelanggan");
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.LokasiKotum", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<sbyte>("AdaKertasOrder")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("adaKertasOrder");

                    b.Property<sbyte>("Kodeareapengiriman")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kodeareapengiriman");

                    b.Property<int>("Kodecoa4")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodecoa4");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nama");

                    b.Property<sbyte>("Provinsi")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("provinsi");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("lokasi_kota", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.LokasiProvinsi", b =>
                {
                    b.Property<sbyte>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kode");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nama");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("lokasi_provinsi", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Manageriallaporan", b =>
                {
                    b.Property<int>("Kodemanager")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodemanager");

                    b.Property<int>("Kodepegawai")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodepegawai");

                    b.Property<sbyte>("Teruskankeatasan")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("teruskankeatasan");

                    b.ToTable("manageriallaporan", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Masteragama", b =>
                {
                    b.Property<sbyte>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("''''''");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("masteragama", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Masterbank", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<string>("Kodebuku")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("kodebuku")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("Kodecoa4")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodecoa4");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nama")
                        .HasDefaultValueSql("''''''");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("masterbank", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Masterbarang", b =>
                {
                    b.Property<short>("BrgKode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint(6)")
                        .HasColumnName("brgKode");

                    b.Property<sbyte>("BrgAktif")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("brgAktif");

                    b.Property<sbyte>("BrgHabis")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("brgHabis");

                    b.Property<string>("BrgNama")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("brgNama")
                        .HasDefaultValueSql("''''''");

                    b.Property<bool>("Brgspesial")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("brgspesial");

                    b.Property<sbyte>("Diskontinu")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("diskontinu");

                    b.Property<sbyte>("Favorit")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("favorit");

                    b.Property<sbyte>("Groupbaranghabis")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("groupbaranghabis");

                    b.Property<int>("HargaSrp")
                        .HasColumnType("int(11)")
                        .HasColumnName("hargaSRP");

                    b.Property<int>("Hargaol")
                        .HasColumnType("int(11)")
                        .HasColumnName("hargaol");

                    b.Property<int>("Hargatoko")
                        .HasColumnType("int(11)")
                        .HasColumnName("hargatoko");

                    b.Property<bool>("InsertName")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("insertName");

                    b.Property<DateTime>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insertTime")
                        .HasDefaultValueSql("'current_timestamp()'");

                    b.Property<int>("KategoriBrg")
                        .HasColumnType("int(11)")
                        .HasColumnName("kategoriBrg");

                    b.Property<string>("KetKirimanCina")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ketKirimanCina")
                        .HasDefaultValueSql("''''''");

                    b.Property<sbyte>("Komisi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("komisi")
                        .HasDefaultValueSql("'1'");

                    b.Property<sbyte>("Kpikelengkapantoko")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kpikelengkapantoko")
                        .HasDefaultValueSql("'1'")
                        .HasComment("Keperluan Apps PastiSukses untuk cek apakah brg ini perlu diorder toko atau belum. 1=Perlu. 0=TidakPerlu.");

                    b.Property<int>("Maksstok")
                        .HasColumnType("int(11)")
                        .HasColumnName("maksstok");

                    b.Property<int>("MinStokHabis")
                        .HasColumnType("int(11)")
                        .HasColumnName("minStokHabis");

                    b.Property<int>("Modal")
                        .HasColumnType("int(11)")
                        .HasColumnName("modal");

                    b.Property<string>("Namaol")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("namaol")
                        .HasDefaultValueSql("''''''");

                    b.Property<sbyte>("PoinToko")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("poinToko");

                    b.Property<sbyte>("SetHarga")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("setHarga");

                    b.Property<sbyte>("Simpanmemostok")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("simpanmemostok");

                    b.Property<sbyte>("StatusKirimanCina")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("statusKirimanCina")
                        .HasComment("0=tidakada,1=disiapkan,2=dikirim");

                    b.Property<int>("Supplierkode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("supplierkode")
                        .HasDefaultValueSql("'1'");

                    b.Property<sbyte>("Tipebarang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("tipebarang")
                        .HasDefaultValueSql("'1'");

                    b.Property<bool>("UpdateName")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("updateName");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updateTime")
                        .HasDefaultValueSql("'current_timestamp()'");

                    b.HasKey("BrgKode")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "BrgAktif" }, "brgAktif");

                    b.HasIndex(new[] { "KategoriBrg" }, "kategoriBrg");

                    b.ToTable("masterbarang", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Mastercatatan", b =>
                {
                    b.Property<string>("Catatan")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasColumnName("catatan")
                        .HasDefaultValueSql("''''''");

                    b.Property<sbyte>("Kodeku")
                        .HasColumnType("tinyint(2)")
                        .HasColumnName("kodeku");

                    b.ToTable("mastercatatan", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Masterchannelsales", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<bool>("Aktif")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("aktif");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nama")
                        .HasDefaultValueSql("''''''");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Kode")
                        .HasName("PK_masterchannelsales");

                    b.ToTable("masterchannelsales", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Mastercicilan", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<long>("Besarpinjaman")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("besarpinjaman");

                    b.Property<int>("Jumlah")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah");

                    b.Property<int>("Kodepegawai")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodepegawai");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nama")
                        .HasDefaultValueSql("''''''");

                    b.Property<sbyte>("Potongdi")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("potongdi")
                        .HasComment("0=gapok,1=komisi");

                    b.Property<sbyte>("Status")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("status")
                        .HasComment("0=belum,1=lunas");

                    b.Property<DateTime>("Tanggal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tanggal")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("mastercicilan", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Masterdivisi", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nama")
                        .HasDefaultValueSql("''''''");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("masterdivisi", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Mastergrupnilai", b =>
                {
                    b.Property<sbyte>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kode");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nama")
                        .HasDefaultValueSql("''''''");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("mastergrupnilai", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Mastergudang", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<bool?>("Aktif")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("aktif")
                        .HasDefaultValueSql("'1'");

                    b.Property<short?>("Boletransit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint(1)")
                        .HasColumnName("boletransit")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("nama")
                        .HasDefaultValueSql("''''''");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<sbyte>("Urut")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(2)")
                        .HasColumnName("urut")
                        .HasDefaultValueSql("'10'");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("mastergudang", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Masterharilibur", b =>
                {
                    b.Property<sbyte>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kode");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("keterangan")
                        .HasDefaultValueSql("''''''");

                    b.Property<DateTime>("Tanggal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tanggal")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("masterharilibur", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Masterinventari", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<sbyte>("Aktif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("aktif")
                        .HasDefaultValueSql("'1'");

                    b.Property<int>("Harga")
                        .HasColumnType("int(11)")
                        .HasColumnName("harga");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("keterangan")
                        .HasDefaultValueSql("''''''");

                    b.Property<sbyte>("Kodejenis")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kodejenis");

                    b.Property<int>("Kodepegawai")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodepegawai");

                    b.Property<DateTime>("TglPakai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tglPakai")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<DateTime>("Tglbeli")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tglbeli")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("masterinventaris", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Masterjabatan", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nama")
                        .HasDefaultValueSql("''''''");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("masterjabatan", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Masterjenisinventari", b =>
                {
                    b.Property<sbyte>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kode");

                    b.Property<sbyte>("Aktif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("aktif")
                        .HasDefaultValueSql("'1'");

                    b.Property<sbyte>("KodeTipe")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kodeTipe");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nama")
                        .HasDefaultValueSql("''''''");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("masterjenisinventaris", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Masterlevelpelanggan", b =>
                {
                    b.Property<int>("Kode")
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nama")
                        .HasDefaultValueSql("''''''");

                    b.ToTable("masterlevelpelanggan", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Masterleveltokopedium", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nama")
                        .HasDefaultValueSql("''''''");

                    b.Property<sbyte>("Urut")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("urut");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("masterleveltokopedia", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Masternilai", b =>
                {
                    b.Property<sbyte>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kode");

                    b.Property<sbyte>("Bobot")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("bobot");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nama")
                        .HasDefaultValueSql("''''''");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("masternilai", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Masterpegawai", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<sbyte>("Akses")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("akses");

                    b.Property<sbyte>("Aktif")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("aktif");

                    b.Property<string>("Alamat")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("alamat")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("Bpjsbyperush")
                        .HasColumnType("int(11)")
                        .HasColumnName("bpjsbyperush");

                    b.Property<int>("Bpjsbysendiri")
                        .HasColumnType("int(11)")
                        .HasColumnName("bpjsbysendiri");

                    b.Property<int>("Bpjstk")
                        .HasColumnType("int(11)")
                        .HasColumnName("bpjstk");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("Grupgaji")
                        .HasColumnType("int(11)")
                        .HasColumnName("grupgaji");

                    b.Property<sbyte>("Grupnilai")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("grupnilai");

                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<string>("Jabatan")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("jabatan")
                        .HasDefaultValueSql("'''Staff Gudang Bawah'''");

                    b.Property<sbyte>("KodeAgama")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kodeAgama");

                    b.Property<int>("Kodeatasan")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeatasan");

                    b.Property<int>("Kodedivisi")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodedivisi");

                    b.Property<int>("Kodejabatan")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodejabatan");

                    b.Property<sbyte>("Kodejamkerja")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kodejamkerja");

                    b.Property<string>("Ktp")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("ktp")
                        .HasDefaultValueSql("''''''");

                    b.Property<sbyte>("Laporan")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("laporan");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nama")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Npwp")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("npwp")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Pass")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("pass")
                        .HasDefaultValueSql("'''akucintadoran'''");

                    b.Property<bool>("Pengiriman")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("pengiriman");

                    b.Property<string>("Rek")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("rek")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Sidikjari")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasColumnName("sidikjari")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Telp")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telp")
                        .HasDefaultValueSql("''''''");

                    b.Property<DateTime>("Tgljoin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tgljoin")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<DateTime>("Tgllahir")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tgllahir")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.HasIndex("Kodedivisi");

                    b.HasIndex("Kodejabatan");

                    b.ToTable("masterpegawai", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Masterpelanggan", b =>
                {
                    b.Property<short>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint(6)")
                        .HasColumnName("kode");

                    b.Property<string>("Adminhp")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("adminhp")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Adminnama")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("adminnama")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Adminpinbbm")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("adminpinbbm")
                        .HasDefaultValueSql("''''''");

                    b.Property<sbyte>("Aktif")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("aktif");

                    b.Property<int>("BatasOmzet")
                        .HasColumnType("int(11)")
                        .HasColumnName("batasOmzet");

                    b.Property<string>("Caranagih")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("caranagih")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Cpemail1")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("cpemail1")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Cpemail2")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("cpemail2")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Cpemail3")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("cpemail3")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Cphp1")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("cphp1")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Cphp2")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("cphp2")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Cphp3")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("cphp3")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Cpjabatan1")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("cpjabatan1")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Cpjabatan2")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("cpjabatan2")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Cpjabatan3")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("cpjabatan3")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Cpnama1")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("cpnama1")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Cpnama2")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("cpnama2")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Cpnama3")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("cpnama3")
                        .HasDefaultValueSql("''''''");

                    b.Property<sbyte>("DefaultPpn")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("defaultPPN")
                        .HasComment("0=tidak,1=ppn");

                    b.Property<string>("Email")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("email")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Fotoform")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("fotoform")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Fotoktp")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("fotoktp")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Fototoko")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("fototoko")
                        .HasDefaultValueSql("''''''");

                    b.Property<bool>("InsertName")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("insertName");

                    b.Property<DateTime>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insertTime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<bool>("Jenisusaha")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("jenisusaha");

                    b.Property<int>("Jumlahlimit")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlahlimit");

                    b.Property<sbyte>("Kirimmelalui")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kirimmelalui");

                    b.Property<sbyte>("Kodeareapengiriman")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kodeareapengiriman");

                    b.Property<int>("Kodecoa4")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodecoa4");

                    b.Property<int>("Kodegroup")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodegroup");

                    b.Property<int>("Kodelevel")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodelevel");

                    b.Property<int>("Kodelevelharga")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodelevelharga")
                        .HasComment("UNTUK KODE LEVEL HARGA ONLINE");

                    b.Property<sbyte>("KodelevelhargaJete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kodelevelhargaJETE")
                        .HasDefaultValueSql("'3'");

                    b.Property<sbyte>("Kodeleveltokopedia")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kodeleveltokopedia");

                    b.Property<int>("Kota")
                        .HasColumnType("int(11)")
                        .HasColumnName("kota");

                    b.Property<sbyte>("KursKomisi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(2)")
                        .HasColumnName("kursKomisi")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Lamakredit")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("lamakredit")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Linktoko")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("linktoko")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Lokasi")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("lokasi")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nama")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("NamaPemilik")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("namaPemilik")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Namaformal")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("namaformal")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Npwp")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("npwp")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Panggilan")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("panggilan")
                        .HasDefaultValueSql("'''Bos'''");

                    b.Property<string>("Pemilikalamat")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("pemilikalamat")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Pemilikhp")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("pemilikhp")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Pemilikpinbbm")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("pemilikpinbbm")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Pemiliktelp")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("pemiliktelp")
                        .HasDefaultValueSql("''''''");

                    b.Property<float>("Potongan")
                        .HasColumnType("float")
                        .HasColumnName("potongan");

                    b.Property<sbyte>("Provinsi")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("provinsi");

                    b.Property<bool>("Punyaform")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("punyaform");

                    b.Property<bool>("Punyapinbbm")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("punyapinbbm");

                    b.Property<int>("Salespemilik")
                        .HasColumnType("int(11)")
                        .HasColumnName("salespemilik");

                    b.Property<DateTime>("Sewa1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("sewa1")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<DateTime>("Sewa2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("sewa2")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<bool>("Showultah")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("showultah");

                    b.Property<bool>("Statustempatusaha")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("statustempatusaha");

                    b.Property<bool?>("TargetAdmin")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("targetAdmin")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime>("TglLahir")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tglLahir")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<DateTime>("Tglberdiri")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tglberdiri")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<sbyte>("Tipeakun")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("tipeakun")
                        .HasComment("0=Masterpelanggan, 1=AKun Pelengkap buat jurnal");

                    b.Property<bool>("Tipepembayaran")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("tipepembayaran");

                    b.Property<bool>("Tipetrans")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("tipetrans");

                    b.Property<string>("Tokoalamatkirim")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("tokoalamatkirim")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Tokoalamatlengkap")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("tokoalamatlengkap")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("Tokoexp")
                        .HasColumnType("int(11)")
                        .HasColumnName("tokoexp");

                    b.Property<string>("Tokohp")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tokohp")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Tokopinbbm")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("tokopinbbm")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Tokotelp")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tokotelp")
                        .HasDefaultValueSql("''''''");

                    b.Property<bool>("UpdateName")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("updateName");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updateTime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<sbyte>("Urutpelanggan")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("urutpelanggan");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Kota" }, "kode");

                    b.ToTable("masterpelanggan", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.MasterPelangganGabungan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20)")
                        .HasColumnName("id");

                    b.Property<int>("BrandId")
                        .HasColumnType("int(11)")
                        .HasColumnName("brand_id");

                    b.Property<long?>("Harga")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint(20)")
                        .HasColumnName("harga")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<bool>("HasUpdated")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("has_updated");

                    b.Property<sbyte>("IsOrder")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("is_order");

                    b.Property<int>("KodeBarang")
                        .HasColumnType("int(11)")
                        .HasColumnName("kode_barang");

                    b.Property<int>("KodePelanggan")
                        .HasColumnType("int(11)")
                        .HasColumnName("kode_pelanggan");

                    b.Property<int?>("KodeSales")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kode_sales")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<string>("NamaCust")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nama_cust")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<sbyte>("Nomorgudang")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("nomorgudang");

                    b.Property<int>("Pcs")
                        .HasColumnType("int(11)")
                        .HasColumnName("pcs");

                    b.Property<string>("Phone")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("phone")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<DateTime?>("Tanggal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tanggal")
                        .HasDefaultValueSql("'NULL'");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "BrandId" }, "kategori_barang");

                    b.HasIndex(new[] { "KodeBarang" }, "kode_barang");

                    b.HasIndex(new[] { "KodePelanggan" }, "kode_pelanggan");

                    b.HasIndex(new[] { "KodeSales" }, "kode_sales");

                    b.HasIndex(new[] { "Kodeh" }, "koded");

                    b.ToTable("master_pelanggan_gabungan", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Masterpemasukan", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<sbyte>("Aktif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("aktif")
                        .HasDefaultValueSql("'1'");

                    b.Property<int>("Kodecoa4")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kodecoa4")
                        .HasDefaultValueSql("'125002'");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nama")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("NomorCicilan")
                        .HasColumnType("int(11)")
                        .HasColumnName("nomorCicilan");

                    b.Property<int>("Sales")
                        .HasColumnType("int(11)")
                        .HasColumnName("sales");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("masterpemasukan", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Masterpengeluaran", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<bool?>("AdaBarcode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("adaBarcode")
                        .HasDefaultValueSql("'1'");

                    b.Property<sbyte>("Aktif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("aktif")
                        .HasDefaultValueSql("'1'");

                    b.Property<bool>("Cargo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("cargo");

                    b.Property<sbyte>("HarusInputNoHp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("harusInputNoHP")
                        .HasDefaultValueSql("'1'");

                    b.Property<sbyte>("JenisKas")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("jenisKas");

                    b.Property<sbyte>("JenisUk")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("jenisUK")
                        .HasComment("0=UK, 1=Cicilan");

                    b.Property<sbyte>("Kodeareapengiriman")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kodeareapengiriman");

                    b.Property<int>("Kodecoa4")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodecoa4");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nama")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("NomorCicilan")
                        .HasColumnType("int(11)")
                        .HasColumnName("nomorCicilan");

                    b.Property<sbyte>("OllangusungCetak")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("OLLangusungCetak")
                        .HasDefaultValueSql("'1'");

                    b.Property<int>("Sales")
                        .HasColumnType("int(11)")
                        .HasColumnName("sales");

                    b.Property<string>("Telpekspedisi")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("telpekspedisi")
                        .HasDefaultValueSql("''''''");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("masterpengeluaran", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Masterpoinaward", b =>
                {
                    b.Property<sbyte>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kode");

                    b.Property<bool?>("Aktif")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("aktif")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nama")
                        .HasDefaultValueSql("''''''");

                    b.Property<bool?>("Urut")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("urut")
                        .HasDefaultValueSql("'1'");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("masterpoinaward", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Mastersupplier", b =>
                {
                    b.Property<short>("SupplierKode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint(6)")
                        .HasColumnName("supplierKode");

                    b.Property<sbyte>("Distiresmi")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("distiresmi");

                    b.Property<string>("EmailBarangHabis")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("emailBarangHabis")
                        .HasDefaultValueSql("''''''");

                    b.Property<bool>("InsertName")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("insertName");

                    b.Property<DateTime>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insertTime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<sbyte>("Jurnalbeli")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("jurnalbeli")
                        .HasDefaultValueSql("'1'");

                    b.Property<int>("Kodecoa4")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodecoa4");

                    b.Property<string>("Namalengkap")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("namalengkap")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Npwp")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("npwp")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Rekening")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("rekening")
                        .HasDefaultValueSql("''''''");

                    b.Property<sbyte>("SupplierAktif")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("supplierAktif");

                    b.Property<string>("SupplierNama")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("supplierNama")
                        .HasDefaultValueSql("''''''");

                    b.Property<bool>("UpdateName")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("updateName");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updateTime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.HasKey("SupplierKode")
                        .HasName("PRIMARY");

                    b.ToTable("mastersupplier", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Mastersuppliercina", b =>
                {
                    b.Property<short>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint(6)")
                        .HasColumnName("kode");

                    b.Property<bool?>("Aktif")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("aktif")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nama")
                        .HasDefaultValueSql("''''''");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("mastersuppliercina", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Mastertarget", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<int>("Bonus")
                        .HasColumnType("int(11)")
                        .HasColumnName("bonus");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("keterangan")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("Kodepelanggan")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodepelanggan");

                    b.Property<int>("Kodepengirim")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodepengirim");

                    b.Property<int>("Kodesales")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodesales");

                    b.Property<int>("Kota")
                        .HasColumnType("int(11)")
                        .HasColumnName("kota");

                    b.Property<int>("Kp2")
                        .HasColumnType("int(11)")
                        .HasColumnName("kp2");

                    b.Property<int>("Kp3")
                        .HasColumnType("int(11)")
                        .HasColumnName("kp3");

                    b.Property<int>("Provinsi")
                        .HasColumnType("int(11)")
                        .HasColumnName("provinsi");

                    b.Property<long>("Target")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("target");

                    b.Property<string>("Tim")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tim")
                        .HasDefaultValueSql("''''''");

                    b.Property<sbyte>("Urut")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("urut");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("mastertarget", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Mastertargettahunan", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<int>("Bulan")
                        .HasColumnType("int(11)")
                        .HasColumnName("bulan");

                    b.Property<sbyte>("Jenis")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("jenis");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("keterangan")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("KodeKategoriBarang")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeKategoriBarang");

                    b.Property<int>("Kota")
                        .HasColumnType("int(11)")
                        .HasColumnName("kota");

                    b.Property<int>("Provinsi")
                        .HasColumnType("int(11)")
                        .HasColumnName("provinsi");

                    b.Property<sbyte>("Sales")
                        .HasColumnType("tinyint(11)")
                        .HasColumnName("sales");

                    b.Property<int>("Tahun")
                        .HasColumnType("int(11)")
                        .HasColumnName("tahun");

                    b.Property<long>("Target")
                        .HasColumnType("bigint(11)")
                        .HasColumnName("target");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("mastertargettahunan", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Mastertimsales", b =>
                {
                    b.Property<sbyte>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kode");

                    b.Property<sbyte>("Aktif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("aktif")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<int>("Kodechannel")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodechannel");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nama")
                        .HasDefaultValueSql("''''''");

                    b.Property<sbyte>("SyaratKomisi")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("syaratKomisi");

                    b.Property<sbyte>("Tampiltahunlalu")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("tampiltahunlalu");

                    b.Property<long>("Targetjete")
                        .HasColumnType("bigint(11)")
                        .HasColumnName("targetjete");

                    b.Property<long>("Targetomzet")
                        .HasColumnType("bigint(11)")
                        .HasColumnName("targetomzet");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.HasIndex("Kodechannel");

                    b.ToTable("mastertimsales", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Mastertipebarang", b =>
                {
                    b.Property<sbyte>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kode");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("nama")
                        .HasDefaultValueSql("''''''");

                    b.Property<sbyte>("Shownya")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("shownya")
                        .HasDefaultValueSql("'1'");

                    b.Property<sbyte>("Urut")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("urut");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("mastertipebarang", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Mastertipeinventari", b =>
                {
                    b.Property<sbyte>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kode");

                    b.Property<sbyte>("Aktif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("aktif")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nama")
                        .HasDefaultValueSql("''''''");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("mastertipeinventaris", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Mastertipetuga", b =>
                {
                    b.Property<sbyte>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kode");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nama")
                        .HasDefaultValueSql("''''''");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("mastertipetugas", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Mastertuga", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<bool>("Cycle")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("cycle");

                    b.Property<string>("Keterangan")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("keterangan")
                        .HasDefaultValueSql("''''''");

                    b.Property<sbyte>("Minlevel")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("minlevel");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nama")
                        .HasDefaultValueSql("''''''");

                    b.Property<sbyte>("Poin")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("poin");

                    b.Property<sbyte>("Prioritas")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("prioritas");

                    b.Property<sbyte>("Tipetugas")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("tipetugas");

                    b.Property<sbyte>("Urut")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("urut");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("mastertugas", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Masteruser", b =>
                {
                    b.Property<int>("Kodeku")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeku");

                    b.Property<string>("Akses")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("akses")
                        .HasDefaultValueSql("''''''");

                    b.Property<sbyte?>("Aktif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("aktif")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<int>("Kodesales")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kodesales")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Passwordku")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("passwordku")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Sidikjari")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasColumnName("sidikjari")
                        .HasDefaultValueSql("''''''");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<string>("Usernameku")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usernameku")
                        .HasDefaultValueSql("''''''");

                    b.HasKey("Kodeku")
                        .HasName("PK_masteruser");

                    b.HasIndex("Kodesales")
                        .IsUnique();

                    b.ToTable("masteruser", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Masteruserretur", b =>
                {
                    b.Property<bool>("Kodeku")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("kodeku");

                    b.Property<string>("Akses")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("akses")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Passwordku")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("passwordku")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Usernameku")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usernameku")
                        .HasDefaultValueSql("''''''");

                    b.HasKey("Kodeku")
                        .HasName("PRIMARY");

                    b.ToTable("masteruserretur", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Memostok", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<int>("Jumlah")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah");

                    b.Property<int>("Kodebrg")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodebrg");

                    b.Property<int>("Kodegudang")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodegudang");

                    b.Property<DateTime>("Tgl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tgl")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("memostok", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Penandajurnal", b =>
                {
                    b.Property<int>("Kodeh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<sbyte>("Bank")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("bank");

                    b.Property<sbyte>("Baranggratis")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("baranggratis");

                    b.Property<sbyte>("Barangretur")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("barangretur");

                    b.Property<sbyte>("Beli")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("beli");

                    b.Property<int>("Bulan")
                        .HasColumnType("int(11)")
                        .HasColumnName("bulan");

                    b.Property<sbyte>("Jual")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("jual");

                    b.Property<sbyte>("Kaskeluar")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kaskeluar");

                    b.Property<sbyte>("Kasmasuk")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kasmasuk");

                    b.Property<sbyte>("Lr")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("LR");

                    b.Property<sbyte>("Memogaji")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("memogaji");

                    b.Property<sbyte>("Memokomisi")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("memokomisi");

                    b.Property<sbyte>("Memopengeluarantambahan")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("memopengeluarantambahan");

                    b.Property<int>("NameLr")
                        .HasColumnType("int(11)")
                        .HasColumnName("nameLR");

                    b.Property<int>("NameNeraca")
                        .HasColumnType("int(11)")
                        .HasColumnName("nameNeraca");

                    b.Property<int>("NameOngkirNetral")
                        .HasColumnType("int(11)");

                    b.Property<int>("Namebank")
                        .HasColumnType("int(11)");

                    b.Property<int>("Namebaranggratis")
                        .HasColumnType("int(11)");

                    b.Property<int>("Namebarangretur")
                        .HasColumnType("int(11)");

                    b.Property<int>("Namebeli")
                        .HasColumnType("int(11)");

                    b.Property<int>("Namejual")
                        .HasColumnType("int(11)");

                    b.Property<int>("Namekaskeluar")
                        .HasColumnType("int(11)");

                    b.Property<int>("Namekasmasuk")
                        .HasColumnType("int(11)");

                    b.Property<int>("Namememogaji")
                        .HasColumnType("int(11)");

                    b.Property<int>("Namememokomisi")
                        .HasColumnType("int(11)");

                    b.Property<int>("Namememopengeluarantambahan")
                        .HasColumnType("int(11)");

                    b.Property<int>("Nameongkirkepelanggan")
                        .HasColumnType("int(11)");

                    b.Property<sbyte>("Neraca")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("neraca");

                    b.Property<sbyte>("OngkirNetral")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte>("Ongkirkepelanggan")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("ongkirkepelanggan");

                    b.Property<int>("Tahun")
                        .HasColumnType("int(11)")
                        .HasColumnName("tahun");

                    b.Property<DateTime>("TimeLr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("timeLR")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<DateTime>("TimeNeraca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("timeNeraca")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<DateTime>("TimeOngkirNetral")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("timeOngkirNetral")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<DateTime>("Timebank")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("timebank")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<DateTime>("Timebaranggratis")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("timebaranggratis")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<DateTime>("Timebarangretur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("timebarangretur")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<DateTime>("Timebeli")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("timebeli")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<DateTime>("Timejual")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("timejual")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<DateTime>("Timekaskeluar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("timekaskeluar")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<DateTime>("Timekasmasuk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("timekasmasuk")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<DateTime>("Timememogaji")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("timememogaji")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<DateTime>("Timememokomisi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("timememokomisi")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<DateTime>("Timememopengeluarantambahan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("timememopengeluarantambahan")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<DateTime>("Timeongkirkepelanggan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("timeongkirkepelanggan")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.HasKey("Kodeh")
                        .HasName("PRIMARY");

                    b.ToTable("penandajurnal", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Penyiaporder", b =>
                {
                    b.Property<sbyte>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(3)")
                        .HasColumnName("kode");

                    b.Property<bool?>("Aktif")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("aktif")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("nama")
                        .HasDefaultValueSql("''''''");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("penyiaporder", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Potonganbarangkurang", b =>
                {
                    b.Property<int>("Bulan")
                        .HasColumnType("int(11)")
                        .HasColumnName("bulan");

                    b.Property<int>("Jumlah")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah");

                    b.Property<int>("Kodepegawai")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodepegawai");

                    b.Property<sbyte>("Status")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("status")
                        .HasComment("0=belum,1=sudahdipotonggaji");

                    b.Property<int>("Tahun")
                        .HasColumnType("int(11)")
                        .HasColumnName("tahun");

                    b.ToTable("potonganbarangkurang", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Profileperush", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<bool>("Akhirjamlaporan")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("akhirjamlaporan");

                    b.Property<string>("Footer1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("footer1");

                    b.Property<string>("Footer2")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("footer2");

                    b.Property<string>("Footer3")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("footer3");

                    b.Property<string>("Footer4")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("footer4");

                    b.Property<string>("Header1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("header1");

                    b.Property<string>("Header2")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("header2");

                    b.Property<string>("Header3")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("header3");

                    b.Property<sbyte>("JamHabis")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("jamHabis")
                        .HasDefaultValueSql("'16'");

                    b.Property<sbyte>("JamTenggang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("jamTenggang")
                        .HasDefaultValueSql("'18'");

                    b.Property<int>("KodePenyiap")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodePenyiap");

                    b.Property<sbyte>("Kodebonusarea")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kodebonusarea");

                    b.Property<string>("Memobonusjete")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("memobonusjete");

                    b.Property<sbyte>("MenitHabis")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("menitHabis")
                        .HasDefaultValueSql("'45'");

                    b.Property<sbyte>("MenitTenggang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("menitTenggang")
                        .HasDefaultValueSql("'59'");

                    b.Property<int>("Minbonusarea")
                        .HasColumnType("int(11)")
                        .HasColumnName("minbonusarea");

                    b.Property<string>("NamaProgram")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("namaProgram");

                    b.Property<short>("OmzetMin")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("omzetMin");

                    b.Property<short>("Profdibagi")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("profdibagi");

                    b.Property<short>("Profmin")
                        .HasColumnType("smallint(6)")
                        .HasColumnName("profmin");

                    b.Property<int>("TargetAdmin")
                        .HasColumnType("int(11)")
                        .HasColumnName("targetAdmin");

                    b.Property<DateTime>("TglLogitech")
                        .HasColumnType("date")
                        .HasColumnName("tglLogitech");

                    b.Property<DateTime>("TglSandisk")
                        .HasColumnType("date")
                        .HasColumnName("tglSandisk");

                    b.Property<DateTime>("TglWd")
                        .HasColumnType("date")
                        .HasColumnName("tglWD");

                    b.Property<DateTime>("Tglseagate")
                        .HasColumnType("date")
                        .HasColumnName("tglseagate");

                    b.Property<DateTime>("Tgltplink")
                        .HasColumnType("date")
                        .HasColumnName("tgltplink");

                    b.Property<sbyte>("Versicekorder")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("versicekorder");

                    b.Property<int>("Versiprogram")
                        .HasColumnType("int(11)")
                        .HasColumnName("versiprogram");

                    b.Property<sbyte>("Versiprogramjtol")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("versiprogramjtol");

                    b.Property<sbyte>("Versiprogrampengiriman")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("versiprogrampengiriman");

                    b.Property<sbyte>("Versiprogramreturan")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("versiprogramreturan");

                    b.Property<sbyte>("Versipujian")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("versipujian");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("profileperush", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Rumushargaonline", b =>
                {
                    b.Property<float>("Hgrosir")
                        .HasColumnType("float")
                        .HasColumnName("hgrosir");

                    b.Property<float>("Hofficial")
                        .HasColumnType("float")
                        .HasColumnName("hofficial");

                    b.Property<float>("Hpromo")
                        .HasColumnType("float")
                        .HasColumnName("hpromo");

                    b.Property<int>("KodeBrand")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeBrand");

                    b.ToTable("rumushargaonline", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Sales", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<sbyte>("Aktif")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("aktif");

                    b.Property<sbyte>("Bisalihatomzettahunantim")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("bisalihatomzettahunantim");

                    b.Property<int>("BonusJete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("bonusJETE")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<sbyte>("EmailJeteterdahsyat")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("emailJETETerdahsyat");

                    b.Property<sbyte>("EmailOmzetTerdahsyat")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("emailOmzetTerdahsyat");

                    b.Property<sbyte>("EmailTargetTahunan")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("emailTargetTahunan");

                    b.Property<sbyte>("Emailbos")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("emailbos");

                    b.Property<sbyte>("Emailresikiriman")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("emailresikiriman");

                    b.Property<string>("Emailspv")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("emailspv");

                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<bool>("Jenis")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("jenis")
                        .HasComment("1 = Terima Email OMZET");

                    b.Property<int>("Kodemanager")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodemanager");

                    b.Property<int>("Kodepegawai")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodepegawai");

                    b.Property<sbyte>("Kodetimsales")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kodetimsales")
                        .HasDefaultValueSql("'12'");

                    b.Property<sbyte>("Manager")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("manager");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("nama");

                    b.Property<string>("NamaPendamping")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("namaPendamping");

                    b.Property<sbyte>("Persenbonus")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("persenbonus");

                    b.Property<sbyte>("Persenkomisi")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("persenkomisi");

                    b.Property<sbyte>("Salesol")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("salesol");

                    b.Property<sbyte>("Syaratbonus")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("syaratbonus");

                    b.Property<int>("T1")
                        .HasColumnType("int(11)")
                        .HasColumnName("t1");

                    b.Property<int>("T2")
                        .HasColumnType("int(11)")
                        .HasColumnName("t2");

                    b.Property<int>("T3")
                        .HasColumnType("int(11)")
                        .HasColumnName("t3");

                    b.Property<int>("T4")
                        .HasColumnType("int(11)")
                        .HasColumnName("t4");

                    b.Property<int>("T5")
                        .HasColumnType("int(11)")
                        .HasColumnName("t5");

                    b.Property<string>("Tim")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("tim");

                    b.Property<sbyte>("Tipe")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("tipe");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updated_at");

                    b.Property<sbyte>("Urutan")
                        .HasColumnType("tinyint(2)")
                        .HasColumnName("urutan");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.HasIndex("Kodemanager")
                        .IsUnique();

                    b.HasIndex(new[] { "Kodetimsales" }, "kodetimsales");

                    b.ToTable("sales", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Sethargajual", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<int>("Harga")
                        .HasColumnType("int(11)")
                        .HasColumnName("harga");

                    b.Property<int>("Kodebarang")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodebarang");

                    b.Property<int>("Kodelevel")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodelevel");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("sethargajual", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Sethargalevel", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<float>("AcuanPotong")
                        .HasColumnType("float")
                        .HasColumnName("acuanPotong");

                    b.Property<float>("AcuanTambah")
                        .HasColumnType("float")
                        .HasColumnName("acuanTambah");

                    b.Property<int>("Modal")
                        .HasColumnType("int(11)")
                        .HasColumnName("modal");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("nama")
                        .HasDefaultValueSql("''''''");

                    b.Property<sbyte>("Online")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("online");

                    b.Property<sbyte>("Urutan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("urutan")
                        .HasDefaultValueSql("'10'");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("sethargalevel", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Sethargatoko", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<int>("Kodebrand")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodebrand");

                    b.Property<sbyte>("Kodelevel")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kodelevel");

                    b.Property<int>("Kodepelanggan")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodepelanggan");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("sethargatoko", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Simpanbonusjete", b =>
                {
                    b.Property<sbyte>("Bulan")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("bulan");

                    b.Property<sbyte>("History")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("history");

                    b.Property<int>("Jumlah")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah");

                    b.Property<int>("Kodesales")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodesales");

                    b.Property<int>("Tahun")
                        .HasColumnType("int(11)")
                        .HasColumnName("tahun");

                    b.ToTable("simpanbonusjete", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Simpandendalainnya", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<sbyte>("Bulan")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("bulan");

                    b.Property<sbyte>("History")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("history");

                    b.Property<int?>("Jumlah")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah")
                        .HasDefaultValueSql("'0'");

                    b.Property<int>("Kodepegawai")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodepegawai");

                    b.Property<string>("Namadenda")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("namadenda")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("Tahun")
                        .HasColumnType("int(11)")
                        .HasColumnName("tahun");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("simpandendalainnya", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Simpandendum", b =>
                {
                    b.Property<int>("Besardenda")
                        .HasColumnType("int(11)")
                        .HasColumnName("besardenda");

                    b.Property<sbyte>("Bulan")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("bulan");

                    b.Property<int>("Dendabriefing")
                        .HasColumnType("int(11)")
                        .HasColumnName("dendabriefing");

                    b.Property<sbyte>("History")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("history");

                    b.Property<int>("Jumhadir")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumhadir");

                    b.Property<int>("Jumharikerja")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumharikerja");

                    b.Property<int>("Jumlah")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah");

                    b.Property<int>("Jumpulanglebihawal")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumpulanglebihawal");

                    b.Property<int>("Kodepegawai")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodepegawai");

                    b.Property<int>("Tahun")
                        .HasColumnType("int(11)")
                        .HasColumnName("tahun");

                    b.Property<sbyte>("Telat")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("telat");

                    b.Property<sbyte>("Tidakmasuk")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("tidakmasuk");

                    b.ToTable("simpandenda", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Syaratbonusjete", b =>
                {
                    b.Property<sbyte>("Bulan")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("bulan");

                    b.Property<sbyte>("Jenis")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("jenis")
                        .HasComment("0=kodekat,1=kodebrg,2=namabrg");

                    b.Property<int>("Kodebrg")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodebrg");

                    b.Property<string>("Sinonim")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("sinonim");

                    b.Property<int>("Tahun")
                        .HasColumnType("int(11)")
                        .HasColumnName("tahun");

                    b.Property<int>("Target")
                        .HasColumnType("int(11)")
                        .HasColumnName("target");

                    b.HasIndex(new[] { "Kodebrg" }, "kodebrg");

                    b.ToTable("syaratbonusjete", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Syaratkomisi", b =>
                {
                    b.Property<int>("Bulan")
                        .HasColumnType("int(11)")
                        .HasColumnName("bulan");

                    b.Property<sbyte>("GapokAdmin")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("gapokAdmin");

                    b.Property<string>("GapokAdminKet")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("gapokAdminKet");

                    b.Property<sbyte>("GapokManager")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("gapokManager");

                    b.Property<string>("GapokManagerKet")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("gapokManagerKet");

                    b.Property<sbyte>("GapokNotaBlok")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("gapokNotaBlok");

                    b.Property<string>("GapokNotaBlokKet")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("gapokNotaBlokKet");

                    b.Property<sbyte>("GapokNotaTrans")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("gapokNotaTrans");

                    b.Property<string>("GapokNotaTransKet")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("gapokNotaTransKet");

                    b.Property<sbyte>("GapokPembelian")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("gapokPembelian");

                    b.Property<string>("GapokPembelianKet")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("gapokPembelianKet");

                    b.Property<sbyte>("GapokTagTitip")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("gapokTagTitip");

                    b.Property<string>("GapokTagTitipKet")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("gapokTagTitipKet");

                    b.Property<sbyte>("GapokTarget")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("gapokTarget");

                    b.Property<int>("Kodesales")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodesales");

                    b.Property<sbyte>("KomisiAdmin")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("komisiAdmin");

                    b.Property<string>("KomisiAdminKet")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("komisiAdminKet");

                    b.Property<sbyte>("KomisiDoranCare")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("komisiDoranCare");

                    b.Property<string>("KomisiDoranCareKet")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("komisiDoranCareKet");

                    b.Property<sbyte>("KomisiEvaluasi")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("komisiEvaluasi");

                    b.Property<sbyte>("KomisiKoper")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("komisiKoper");

                    b.Property<string>("KomisiKoperket")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("komisiKoperket");

                    b.Property<sbyte>("KomisiManager")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("komisiManager");

                    b.Property<string>("KomisiManagerKet")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("komisiManagerKet");

                    b.Property<sbyte>("KomisiNotaBlok")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("komisiNotaBlok");

                    b.Property<string>("KomisiNotaBlokKet")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("komisiNotaBlokKet");

                    b.Property<sbyte>("KomisiNotaTrans")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("komisiNotaTrans");

                    b.Property<string>("KomisiNotaTransKet")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("komisiNotaTransKet");

                    b.Property<sbyte>("KomisiPembelian")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("komisiPembelian");

                    b.Property<string>("KomisiPembelianKet")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("komisiPembelianKet");

                    b.Property<sbyte>("KomisiTagTitip")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("komisiTagTitip");

                    b.Property<string>("KomisiTagTitipKet")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("komisiTagTitipKet");

                    b.Property<int>("Tahun")
                        .HasColumnType("int(11)")
                        .HasColumnName("tahun");

                    b.ToTable("syaratkomisi", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Syarattargetarea", b =>
                {
                    b.Property<sbyte>("Bulan")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("bulan");

                    b.Property<sbyte>("Jenis")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("jenis")
                        .HasComment("0=kodekat,1=kodebrg,2=namabrg");

                    b.Property<int>("Kodebrg")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodebrg");

                    b.Property<string>("Sinonim")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("sinonim");

                    b.Property<int>("Tahun")
                        .HasColumnType("int(11)")
                        .HasColumnName("tahun");

                    b.Property<int>("Target")
                        .HasColumnType("int(11)")
                        .HasColumnName("target");

                    b.ToTable("syarattargetarea", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Tagihan", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<sbyte>("Dihitung")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("dihitung")
                        .HasDefaultValueSql("'1'")
                        .HasComment("Dihitung dalam detail transfer atau tidak");

                    b.Property<bool>("InsertName")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("insertName");

                    b.Property<DateTime>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insertTime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<long>("Jumlah")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("jumlah");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("keterangan")
                        .HasDefaultValueSql("''''''''''''''");

                    b.Property<int>("KodeTotalSetoran")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeTotalSetoran");

                    b.Property<int>("Kodecoa4")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodecoa4");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<int>("Kodehlunasinmassal")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodehlunasinmassal");

                    b.Property<int>("Kodetipeonline")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodetipeonline")
                        .HasComment("Kode jenis bayar dari Market Place");

                    b.Property<int>("Kodett")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodett");

                    b.Property<bool>("Penagih")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("penagih");

                    b.Property<sbyte>("Periksa")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("periksa")
                        .HasComment("Keperluan Online : Sudah diperiksa valid atau belum");

                    b.Property<sbyte>("Tessubsiditkpd")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("tessubsiditkpd");

                    b.Property<DateTime>("TglAngsur")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tglAngsur")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<bool>("Transfer")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("transfer")
                        .HasComment("0 = tunai, 1 = transfer");

                    b.Property<bool>("UdaDiSetor")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("udaDiSetor")
                        .HasComment("3 = udaDiCek, 2 = udaDiSetor, 1 0 = belum");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "KodeTotalSetoran" }, "kodeTotalSetoran");

                    b.HasIndex(new[] { "Kodeh" }, "kodeh");

                    b.HasIndex(new[] { "Kodehlunasinmassal" }, "kodehlunasinmassal");

                    b.HasIndex(new[] { "Kodett" }, "kodett");

                    b.HasIndex(new[] { "TglAngsur" }, "tglAngsur");

                    b.ToTable("tagihan", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Tagihansupplier", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<int>("Coa4")
                        .HasColumnType("int(11)")
                        .HasColumnName("coa4");

                    b.Property<sbyte>("InsertName")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("insertName")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insertTime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<int>("Jumlah")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("keterangan")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("Kodedetailbayar")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodedetailbayar");

                    b.Property<int>("Kodehbeli")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodehbeli");

                    b.Property<int>("Piutang")
                        .HasColumnType("int(11)")
                        .HasColumnName("piutang");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("tagihansupplier", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Tagihanvirtual", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<DateTime>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insertTime")
                        .HasDefaultValueSql("'current_timestamp()'");

                    b.Property<sbyte>("Insertname")
                        .HasColumnType("tinyint(2)")
                        .HasColumnName("insertname");

                    b.Property<long>("Jumlah")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("jumlah");

                    b.Property<int>("Kodeh")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeh");

                    b.Property<int>("Kodett")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodett");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("tagihanvirtual", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Targetomzettoko", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<string>("Hadiah")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("hadiah");

                    b.Property<int>("Kodepelanggan")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodepelanggan");

                    b.Property<sbyte>("Kodesales")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kodesales");

                    b.Property<long>("Omzet")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("omzet");

                    b.Property<DateTime>("Tglakhir")
                        .HasColumnType("date")
                        .HasColumnName("tglakhir");

                    b.Property<DateTime>("Tglawal")
                        .HasColumnType("date")
                        .HasColumnName("tglawal");

                    b.Property<int>("Toko2")
                        .HasColumnType("int(11)")
                        .HasColumnName("toko2");

                    b.Property<int>("Toko3")
                        .HasColumnType("int(11)")
                        .HasColumnName("toko3");

                    b.Property<int>("Toko4")
                        .HasColumnType("int(11)")
                        .HasColumnName("toko4");

                    b.Property<int>("Toko5")
                        .HasColumnType("int(11)")
                        .HasColumnName("toko5");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("targetomzettoko", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Targetomzettokojete", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<string>("Hadiah")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("hadiah");

                    b.Property<int>("Kodepelanggan")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodepelanggan");

                    b.Property<sbyte>("Kodesales")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kodesales");

                    b.Property<long>("Omzet")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("omzet");

                    b.Property<DateTime>("Tglakhir")
                        .HasColumnType("date")
                        .HasColumnName("tglakhir");

                    b.Property<DateTime>("Tglawal")
                        .HasColumnType("date")
                        .HasColumnName("tglawal");

                    b.Property<int>("Toko2")
                        .HasColumnType("int(11)")
                        .HasColumnName("toko2");

                    b.Property<int>("Toko3")
                        .HasColumnType("int(11)")
                        .HasColumnName("toko3");

                    b.Property<int>("Toko4")
                        .HasColumnType("int(11)")
                        .HasColumnName("toko4");

                    b.Property<int>("Toko5")
                        .HasColumnType("int(11)")
                        .HasColumnName("toko5");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("targetomzettokojete", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Targetomzettokopc", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("KODE");

                    b.Property<bool>("Carahitung")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("carahitung");

                    b.Property<string>("Hadiah")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("hadiah");

                    b.Property<int>("Hrgmin")
                        .HasColumnType("int(11)")
                        .HasColumnName("hrgmin");

                    b.Property<int>("Kodebarang")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodebarang");

                    b.Property<int>("Kodepelanggan")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodepelanggan");

                    b.Property<sbyte>("Kodesales")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kodesales");

                    b.Property<string>("Namasinonim")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("namasinonim");

                    b.Property<int>("Target")
                        .HasColumnType("int(11)")
                        .HasColumnName("target");

                    b.Property<DateTime>("Tglakhir")
                        .HasColumnType("date")
                        .HasColumnName("tglakhir");

                    b.Property<DateTime>("Tglawal")
                        .HasColumnType("date")
                        .HasColumnName("tglawal");

                    b.Property<int>("Toko2")
                        .HasColumnType("int(11)")
                        .HasColumnName("toko2");

                    b.Property<int>("Toko3")
                        .HasColumnType("int(11)")
                        .HasColumnName("toko3");

                    b.Property<int>("Toko4")
                        .HasColumnType("int(11)")
                        .HasColumnName("toko4");

                    b.Property<int>("Toko5")
                        .HasColumnType("int(11)")
                        .HasColumnName("toko5");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("targetomzettokopcs", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Totalsetoran", b =>
                {
                    b.Property<int>("KodeTotalSetoran")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeTotalSetoran");

                    b.Property<int>("Jum1")
                        .HasColumnType("int(11)");

                    b.Property<int>("Jum2")
                        .HasColumnType("int(11)");

                    b.Property<int>("Jum3")
                        .HasColumnType("int(11)");

                    b.Property<int>("Jum4")
                        .HasColumnType("int(11)");

                    b.Property<string>("Ket1")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Ket2")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Ket3")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasDefaultValueSql("''''''");

                    b.Property<string>("Ket4")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("Kodetotalsetoranglobal")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodetotalsetoranglobal");

                    b.Property<bool>("Setor")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("setor");

                    b.Property<DateTime>("TglSetoran")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<int>("TotalSetoran1")
                        .HasColumnType("int(11)")
                        .HasColumnName("TotalSetoran");

                    b.HasKey("KodeTotalSetoran")
                        .HasName("PRIMARY");

                    b.ToTable("totalsetoran", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Totalsetoranglobal", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<sbyte>("InsertName")
                        .HasColumnType("tinyint(2)")
                        .HasColumnName("insertName");

                    b.Property<DateTime>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insertTime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<int>("Jumlah")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah");

                    b.Property<int>("Jumlahakhir")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlahakhir");

                    b.Property<int>("Kodett")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodett");

                    b.Property<sbyte>("Penerima")
                        .HasColumnType("tinyint(2)")
                        .HasColumnName("penerima");

                    b.Property<bool>("Setor")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("setor");

                    b.Property<DateTime>("Tanggal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tanggal")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<DateTime>("TglTerima")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("tglTerima")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<DateTime>("Tglsetor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tglsetor")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("totalsetoranglobal", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Transaksipemasukan", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<sbyte>("InsertName")
                        .HasColumnType("tinyint(2)")
                        .HasColumnName("insertName");

                    b.Property<DateTime>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insertTime")
                        .HasDefaultValueSql("'current_timestamp()'");

                    b.Property<int>("Jumlah")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlah");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("keterangan")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("KodePemasukan")
                        .HasColumnType("int(4)")
                        .HasColumnName("kodePemasukan");

                    b.Property<int>("KodeTotalSetoran")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeTotalSetoran");

                    b.Property<int>("Kodetotalsetoranglobal")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodetotalsetoranglobal");

                    b.Property<bool>("Setor")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("setor")
                        .HasComment("0 1 Admin, 2 Jhonny");

                    b.Property<DateTime>("TglPemasukan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tglPemasukan")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<sbyte>("UpdateName")
                        .HasColumnType("tinyint(2)")
                        .HasColumnName("updateName");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasColumnName("updateTime")
                        .HasDefaultValueSql("'current_timestamp()'");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.ToTable("transaksipemasukan", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Transaksipengeluaran", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<sbyte>("Bank")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("bank")
                        .HasComment("0=tunai,1=bank");

                    b.Property<sbyte>("InsertName")
                        .HasColumnType("tinyint(2)")
                        .HasColumnName("insertName");

                    b.Property<DateTime>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insertTime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<sbyte>("JenisPengeluaran")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("jenisPengeluaran")
                        .HasComment("0 Normal, 1 Cargo Masuk, 2 Setoran, 3 Cargo Keluar");

                    b.Property<long>("Jumlah")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("jumlah");

                    b.Property<int>("JumlahLainnya")
                        .HasColumnType("int(11)")
                        .HasColumnName("jumlahLainnya");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("keterangan")
                        .HasDefaultValueSql("''''''");

                    b.Property<int>("KodePengeluaran")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodePengeluaran");

                    b.Property<int>("KodeTotalSetoran")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeTotalSetoran");

                    b.Property<int>("Kodetotalsetoranglobal")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodetotalsetoranglobal");

                    b.Property<bool>("Setor")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("setor")
                        .HasComment("0 1 Admin, 2 Master Admin, 3 Jhonny");

                    b.Property<sbyte>("Sudahjurnal")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("sudahjurnal")
                        .HasComment("0=belum,1=sudah");

                    b.Property<DateTime>("TglPengeluaran")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tglPengeluaran")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<sbyte>("UpdateName")
                        .HasColumnType("tinyint(2)")
                        .HasColumnName("updateName");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updateTime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Kodetotalsetoranglobal" }, "kodetotalsetoranglobal");

                    b.ToTable("transaksipengeluaran", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Ttkeluar", b =>
                {
                    b.Property<int>("Kodett")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kodett");

                    b.Property<int>("Kodepenggunaan")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodepenggunaan")
                        .HasComment("kode lookup");

                    b.Property<int>("Kodepenggunaan2")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodepenggunaan2");

                    b.Property<sbyte>("Tipe")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("tipe")
                        .HasComment("0=tag,1=biaya,2=gaji");

                    b.HasKey("Kodett")
                        .HasName("PRIMARY");

                    b.ToTable("ttkeluar", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Ttmasuk", b =>
                {
                    b.Property<int>("Kode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("kode");

                    b.Property<bool>("History")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("history")
                        .HasComment("0=belum, 1=beres, 2=dicekJhonny");

                    b.Property<DateTime?>("InsertTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("insertTime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<sbyte>("Insertname")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("insertname");

                    b.Property<long>("Jumlah")
                        .HasColumnType("bigint(20)")
                        .HasColumnName("jumlah");

                    b.Property<string>("Keterangan")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("keterangan")
                        .HasDefaultValueSql("''''''");

                    b.Property<bool>("Kodebank")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("kodebank");

                    b.Property<int>("Kodeonline")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodeonline");

                    b.Property<int>("Kodepelanggan")
                        .HasColumnType("int(11)")
                        .HasColumnName("kodepelanggan");

                    b.Property<sbyte>("Kreditdebit")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kreditdebit")
                        .HasComment("0=Kredit,1=Debit");

                    b.Property<DateTime>("Tgl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("tgl")
                        .HasDefaultValueSql("'''0000-00-00'''");

                    b.Property<sbyte>("Updatename")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("updatename");

                    b.Property<DateTime>("Updatetime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("updatetime")
                        .HasDefaultValueSql("'''0000-00-00 00:00:00'''");

                    b.Property<int>("Urut")
                        .HasColumnType("int(11)")
                        .HasColumnName("urut");

                    b.HasKey("Kode")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Kodebank" }, "kodebank");

                    b.HasIndex(new[] { "Kreditdebit" }, "kreditdebit");

                    b.HasIndex(new[] { "Tgl" }, "tgl");

                    b.ToTable("ttmasuk", (string)null);
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Masterpegawai", b =>
                {
                    b.HasOne("DoranOfficeBackend.Models.Masterdivisi", "Masterdivisi")
                        .WithMany("Masterpegawais")
                        .HasForeignKey("Kodedivisi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoranOfficeBackend.Models.Masterjabatan", "Masterjabatan")
                        .WithMany("Masterpegawais")
                        .HasForeignKey("Kodejabatan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Masterdivisi");

                    b.Navigation("Masterjabatan");
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Mastertimsales", b =>
                {
                    b.HasOne("DoranOfficeBackend.Models.Masterchannelsales", "Masterchannelsales")
                        .WithMany("Mastertimsales")
                        .HasForeignKey("Kodechannel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Masterchannelsales");
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Masteruser", b =>
                {
                    b.HasOne("DoranOfficeBackend.Models.Sales", "Sales")
                        .WithOne("Masteruser")
                        .HasForeignKey("DoranOfficeBackend.Models.Masteruser", "Kodesales")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Sales", b =>
                {
                    b.HasOne("DoranOfficeBackend.Models.Sales", "SalesManager")
                        .WithOne()
                        .HasForeignKey("DoranOfficeBackend.Models.Sales", "Kodemanager")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoranOfficeBackend.Models.Mastertimsales", "Mastertimsales")
                        .WithMany("Sales")
                        .HasForeignKey("Kodetimsales")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mastertimsales");

                    b.Navigation("SalesManager");
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Masterchannelsales", b =>
                {
                    b.Navigation("Mastertimsales");
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Masterdivisi", b =>
                {
                    b.Navigation("Masterpegawais");
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Masterjabatan", b =>
                {
                    b.Navigation("Masterpegawais");
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Mastertimsales", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("DoranOfficeBackend.Models.Sales", b =>
                {
                    b.Navigation("Masteruser");
                });
#pragma warning restore 612, 618
        }
    }
}
